; ModuleID = 'MatrixMultiplication_Kernels.llvm'

define void @mmmKernel(<4 x float> addrspace(1)* %matrixA, <4 x float> addrspace(1)* %matrixB, <4 x float> addrspace(1)* %matrixC, i32 %widthA, i32 %widthB) {
block_0:
  %matrixA_addr = alloca <4 x float> addrspace(1)*
  store <4 x float> addrspace(1)* %matrixA, <4 x float> addrspace(1)** %matrixA_addr
  %matrixB_addr = alloca <4 x float> addrspace(1)*
  store <4 x float> addrspace(1)* %matrixB, <4 x float> addrspace(1)** %matrixB_addr
  %matrixC_addr = alloca <4 x float> addrspace(1)*
  store <4 x float> addrspace(1)* %matrixC, <4 x float> addrspace(1)** %matrixC_addr
  %widthA_addr = alloca i32
  store i32 %widthA, i32* %widthA_addr
  %widthB_addr = alloca i32
  store i32 %widthB, i32* %widthB_addr
  %tmp_2 = alloca <2 x i32>
  %pos = alloca <2 x i32>
  %tmp_8 = alloca <4 x float>
  %sum0 = alloca <4 x float>
  %tmp_12 = alloca <4 x float>
  %sum1 = alloca <4 x float>
  %tmp_16 = alloca <4 x float>
  %sum2 = alloca <4 x float>
  %tmp_20 = alloca <4 x float>
  %sum3 = alloca <4 x float>
  %i = alloca i32
  %tempA0 = alloca <4 x float>
  %tempA1 = alloca <4 x float>
  %tempA2 = alloca <4 x float>
  %tempA3 = alloca <4 x float>
  %tempB0 = alloca <4 x float>
  %tempB1 = alloca <4 x float>
  %tempB2 = alloca <4 x float>
  %tempB3 = alloca <4 x float>
  %tmp_147 = alloca <4 x float>
  %tmp_184 = alloca <4 x float>
  %tmp_221 = alloca <4 x float>
  %tmp_258 = alloca <4 x float>
  %tmp_295 = alloca <4 x float>
  %tmp_332 = alloca <4 x float>
  %tmp_369 = alloca <4 x float>
  %tmp_406 = alloca <4 x float>
  %tmp_443 = alloca <4 x float>
  %tmp_480 = alloca <4 x float>
  %tmp_517 = alloca <4 x float>
  %tmp_554 = alloca <4 x float>
  %tmp_591 = alloca <4 x float>
  %tmp_628 = alloca <4 x float>
  %tmp_665 = alloca <4 x float>
  %tmp_702 = alloca <4 x float>
  br label %block_1

block_1:                                          ; preds = %block_0
  %tmp_0 = call i32 @__get_global_id_u32(i32 0)
  %tmp_1 = call i32 @__get_global_id_u32(i32 1)
  %tmp_3 = load <2 x i32>* %tmp_2
  %tmp_5 = insertelement <2 x i32> %tmp_3, i32 %tmp_0, i32 0
  store <2 x i32> %tmp_5, <2 x i32>* %tmp_2
  %tmp_51 = load <2 x i32>* %tmp_2
  %tmp_7 = insertelement <2 x i32> %tmp_51, i32 %tmp_1, i32 1
  store <2 x i32> %tmp_7, <2 x i32>* %tmp_2
  store <2 x i32> %tmp_7, <2 x i32>* %pos
  %tmp_9 = load <4 x float>* %tmp_8
  store <4 x float> zeroinitializer, <4 x float>* %sum0
  %tmp_13 = load <4 x float>* %tmp_12
  store <4 x float> zeroinitializer, <4 x float>* %sum1
  %tmp_17 = load <4 x float>* %tmp_16
  store <4 x float> zeroinitializer, <4 x float>* %sum2
  %tmp_21 = load <4 x float>* %tmp_20
  store <4 x float> zeroinitializer, <4 x float>* %sum3
  %tmp_23 = load i32* %widthB_addr
  %tmp_24 = udiv i32 %tmp_23, 4
  store i32 %tmp_24, i32* %widthB_addr
  store i32 0, i32* %i
  br label %block_2

block_2:                                          ; preds = %block_4, %block_1
  %tmp_25 = load i32* %i
  %tmp_26 = load i32* %widthA_addr
  %tmp_27 = icmp slt i32 %tmp_25, %tmp_26
  %tmp_28 = sext i1 %tmp_27 to i32
  %tmp_29 = icmp ne i32 %tmp_28, 0
  br i1 %tmp_29, label %block_3, label %block_5

block_3:                                          ; preds = %block_2
  %tmp_32 = load i32* %i
  %tmp_33 = sdiv i32 %tmp_32, 4
  %tmp_34 = load <2 x i32>* %pos
  %tmp_35 = extractelement <2 x i32> %tmp_34, i32 1
  %tmp_36 = shl i32 %tmp_35, 2
  %tmp_37 = load i32* %widthA_addr
  %tmp_39 = udiv i32 %tmp_37, 4
  %tmp_40 = mul i32 %tmp_36, %tmp_39
  %tmp_402 = add i32 %tmp_33, %tmp_40
  %tmp_41 = load <4 x float> addrspace(1)** %matrixA_addr
  %tmp_42 = getelementptr <4 x float> addrspace(1)* %tmp_41, i32 %tmp_402
  %tmp_43 = load <4 x float> addrspace(1)* %tmp_42
  store <4 x float> %tmp_43, <4 x float>* %tempA0
  %tmp_44 = load i32* %i
  %tmp_45 = sdiv i32 %tmp_44, 4
  %tmp_46 = load <2 x i32>* %pos
  %tmp_47 = extractelement <2 x i32> %tmp_46, i32 1
  %tmp_48 = shl i32 %tmp_47, 2
  %tmp_49 = add i32 %tmp_48, 1
  %tmp_50 = load i32* %widthA_addr
  %tmp_52 = udiv i32 %tmp_50, 4
  %tmp_53 = mul i32 %tmp_49, %tmp_52
  %tmp_533 = add i32 %tmp_45, %tmp_53
  %tmp_54 = load <4 x float> addrspace(1)** %matrixA_addr
  %tmp_55 = getelementptr <4 x float> addrspace(1)* %tmp_54, i32 %tmp_533
  %tmp_56 = load <4 x float> addrspace(1)* %tmp_55
  store <4 x float> %tmp_56, <4 x float>* %tempA1
  %tmp_57 = load i32* %i
  %tmp_58 = sdiv i32 %tmp_57, 4
  %tmp_59 = load <2 x i32>* %pos
  %tmp_60 = extractelement <2 x i32> %tmp_59, i32 1
  %tmp_61 = shl i32 %tmp_60, 2
  %tmp_62 = add i32 %tmp_61, 2
  %tmp_63 = load i32* %widthA_addr
  %tmp_65 = udiv i32 %tmp_63, 4
  %tmp_66 = mul i32 %tmp_62, %tmp_65
  %tmp_664 = add i32 %tmp_58, %tmp_66
  %tmp_67 = load <4 x float> addrspace(1)** %matrixA_addr
  %tmp_68 = getelementptr <4 x float> addrspace(1)* %tmp_67, i32 %tmp_664
  %tmp_69 = load <4 x float> addrspace(1)* %tmp_68
  store <4 x float> %tmp_69, <4 x float>* %tempA2
  %tmp_70 = load i32* %i
  %tmp_71 = sdiv i32 %tmp_70, 4
  %tmp_72 = load <2 x i32>* %pos
  %tmp_73 = extractelement <2 x i32> %tmp_72, i32 1
  %tmp_74 = shl i32 %tmp_73, 2
  %tmp_75 = add i32 %tmp_74, 3
  %tmp_76 = load i32* %widthA_addr
  %tmp_78 = udiv i32 %tmp_76, 4
  %tmp_79 = mul i32 %tmp_75, %tmp_78
  %tmp_795 = add i32 %tmp_71, %tmp_79
  %tmp_80 = load <4 x float> addrspace(1)** %matrixA_addr
  %tmp_81 = getelementptr <4 x float> addrspace(1)* %tmp_80, i32 %tmp_795
  %tmp_82 = load <4 x float> addrspace(1)* %tmp_81
  store <4 x float> %tmp_82, <4 x float>* %tempA3
  %tmp_83 = load <2 x i32>* %pos
  %tmp_84 = extractelement <2 x i32> %tmp_83, i32 0
  %tmp_85 = load i32* %i
  %tmp_86 = load i32* %widthB_addr
  %tmp_88 = mul i32 %tmp_85, %tmp_86
  %tmp_886 = add i32 %tmp_84, %tmp_88
  %tmp_89 = load <4 x float> addrspace(1)** %matrixB_addr
  %tmp_90 = getelementptr <4 x float> addrspace(1)* %tmp_89, i32 %tmp_886
  %tmp_91 = load <4 x float> addrspace(1)* %tmp_90
  store <4 x float> %tmp_91, <4 x float>* %tempB0
  %tmp_92 = load <2 x i32>* %pos
  %tmp_93 = extractelement <2 x i32> %tmp_92, i32 0
  %tmp_94 = load i32* %i
  %tmp_95 = add i32 %tmp_94, 1
  %tmp_96 = load i32* %widthB_addr
  %tmp_98 = mul i32 %tmp_95, %tmp_96
  %tmp_987 = add i32 %tmp_93, %tmp_98
  %tmp_99 = load <4 x float> addrspace(1)** %matrixB_addr
  %tmp_100 = getelementptr <4 x float> addrspace(1)* %tmp_99, i32 %tmp_987
  %tmp_101 = load <4 x float> addrspace(1)* %tmp_100
  store <4 x float> %tmp_101, <4 x float>* %tempB1
  %tmp_102 = load <2 x i32>* %pos
  %tmp_103 = extractelement <2 x i32> %tmp_102, i32 0
  %tmp_104 = load i32* %i
  %tmp_105 = add i32 %tmp_104, 2
  %tmp_106 = load i32* %widthB_addr
  %tmp_108 = mul i32 %tmp_105, %tmp_106
  %tmp_1088 = add i32 %tmp_103, %tmp_108
  %tmp_109 = load <4 x float> addrspace(1)** %matrixB_addr
  %tmp_110 = getelementptr <4 x float> addrspace(1)* %tmp_109, i32 %tmp_1088
  %tmp_111 = load <4 x float> addrspace(1)* %tmp_110
  store <4 x float> %tmp_111, <4 x float>* %tempB2
  %tmp_112 = load <2 x i32>* %pos
  %tmp_113 = extractelement <2 x i32> %tmp_112, i32 0
  %tmp_114 = load i32* %i
  %tmp_115 = add i32 %tmp_114, 3
  %tmp_116 = load i32* %widthB_addr
  %tmp_118 = mul i32 %tmp_115, %tmp_116
  %tmp_1189 = add i32 %tmp_113, %tmp_118
  %tmp_119 = load <4 x float> addrspace(1)** %matrixB_addr
  %tmp_120 = getelementptr <4 x float> addrspace(1)* %tmp_119, i32 %tmp_1189
  %tmp_121 = load <4 x float> addrspace(1)* %tmp_120
  store <4 x float> %tmp_121, <4 x float>* %tempB3
  %tmp_122 = load <4 x float>* %tempA0
  %tmp_123 = extractelement <4 x float> %tmp_122, i32 0
  %tmp_124 = load <4 x float>* %tempB0
  %tmp_125 = extractelement <4 x float> %tmp_124, i32 0
  %tmp_126 = fmul float %tmp_123, %tmp_125
  %tmp_127 = load <4 x float>* %tempA0
  %tmp_128 = extractelement <4 x float> %tmp_127, i32 1
  %tmp_129 = load <4 x float>* %tempB1
  %tmp_130 = extractelement <4 x float> %tmp_129, i32 0
  %tmp_131 = fmul float %tmp_128, %tmp_130
  %tmp_132 = fadd float %tmp_126, %tmp_131
  %tmp_133 = load <4 x float>* %tempA0
  %tmp_134 = extractelement <4 x float> %tmp_133, i32 2
  %tmp_135 = load <4 x float>* %tempB2
  %tmp_136 = extractelement <4 x float> %tmp_135, i32 0
  %tmp_137 = fmul float %tmp_134, %tmp_136
  %tmp_138 = fadd float %tmp_132, %tmp_137
  %tmp_139 = load <4 x float>* %tempA0
  %tmp_140 = extractelement <4 x float> %tmp_139, i32 3
  %tmp_141 = load <4 x float>* %tempB3
  %tmp_142 = extractelement <4 x float> %tmp_141, i32 0
  %tmp_143 = fmul float %tmp_140, %tmp_142
  %tmp_144 = fadd float %tmp_138, %tmp_143
  %tmp_145 = load <4 x float>* %sum0
  %tmp_148 = load <4 x float>* %tmp_147
  %tmp_150 = insertelement <4 x float> %tmp_148, float %tmp_144, i32 0
  %tmp_152 = insertelement <4 x float> %tmp_150, float %tmp_144, i32 1
  %tmp_154 = insertelement <4 x float> %tmp_152, float %tmp_144, i32 2
  %tmp_156 = insertelement <4 x float> %tmp_154, float %tmp_144, i32 3
  %tmp_157 = fadd <4 x float> %tmp_145, %tmp_156
  store <4 x float> %tmp_157, <4 x float>* %sum0
  %tmp_159 = load <4 x float>* %tempA0
  %tmp_160 = extractelement <4 x float> %tmp_159, i32 0
  %tmp_161 = load <4 x float>* %tempB0
  %tmp_162 = extractelement <4 x float> %tmp_161, i32 1
  %tmp_163 = fmul float %tmp_160, %tmp_162
  %tmp_164 = load <4 x float>* %tempA0
  %tmp_165 = extractelement <4 x float> %tmp_164, i32 1
  %tmp_166 = load <4 x float>* %tempB1
  %tmp_167 = extractelement <4 x float> %tmp_166, i32 1
  %tmp_168 = fmul float %tmp_165, %tmp_167
  %tmp_169 = fadd float %tmp_163, %tmp_168
  %tmp_170 = load <4 x float>* %tempA0
  %tmp_171 = extractelement <4 x float> %tmp_170, i32 2
  %tmp_172 = load <4 x float>* %tempB2
  %tmp_173 = extractelement <4 x float> %tmp_172, i32 1
  %tmp_174 = fmul float %tmp_171, %tmp_173
  %tmp_175 = fadd float %tmp_169, %tmp_174
  %tmp_176 = load <4 x float>* %tempA0
  %tmp_177 = extractelement <4 x float> %tmp_176, i32 3
  %tmp_178 = load <4 x float>* %tempB3
  %tmp_179 = extractelement <4 x float> %tmp_178, i32 1
  %tmp_180 = fmul float %tmp_177, %tmp_179
  %tmp_181 = fadd float %tmp_175, %tmp_180
  %tmp_182 = load <4 x float>* %sum0
  %tmp_185 = load <4 x float>* %tmp_184
  %tmp_187 = insertelement <4 x float> %tmp_185, float %tmp_181, i32 0
  %tmp_189 = insertelement <4 x float> %tmp_187, float %tmp_181, i32 1
  %tmp_191 = insertelement <4 x float> %tmp_189, float %tmp_181, i32 2
  %tmp_193 = insertelement <4 x float> %tmp_191, float %tmp_181, i32 3
  %tmp_194 = fadd <4 x float> %tmp_182, %tmp_193
  store <4 x float> %tmp_194, <4 x float>* %sum0
  %tmp_196 = load <4 x float>* %tempA0
  %tmp_197 = extractelement <4 x float> %tmp_196, i32 0
  %tmp_198 = load <4 x float>* %tempB0
  %tmp_199 = extractelement <4 x float> %tmp_198, i32 2
  %tmp_200 = fmul float %tmp_197, %tmp_199
  %tmp_201 = load <4 x float>* %tempA0
  %tmp_202 = extractelement <4 x float> %tmp_201, i32 1
  %tmp_203 = load <4 x float>* %tempB1
  %tmp_204 = extractelement <4 x float> %tmp_203, i32 2
  %tmp_205 = fmul float %tmp_202, %tmp_204
  %tmp_206 = fadd float %tmp_200, %tmp_205
  %tmp_207 = load <4 x float>* %tempA0
  %tmp_208 = extractelement <4 x float> %tmp_207, i32 2
  %tmp_209 = load <4 x float>* %tempB2
  %tmp_210 = extractelement <4 x float> %tmp_209, i32 2
  %tmp_211 = fmul float %tmp_208, %tmp_210
  %tmp_212 = fadd float %tmp_206, %tmp_211
  %tmp_213 = load <4 x float>* %tempA0
  %tmp_214 = extractelement <4 x float> %tmp_213, i32 3
  %tmp_215 = load <4 x float>* %tempB3
  %tmp_216 = extractelement <4 x float> %tmp_215, i32 2
  %tmp_217 = fmul float %tmp_214, %tmp_216
  %tmp_218 = fadd float %tmp_212, %tmp_217
  %tmp_219 = load <4 x float>* %sum0
  %tmp_222 = load <4 x float>* %tmp_221
  %tmp_224 = insertelement <4 x float> %tmp_222, float %tmp_218, i32 0
  %tmp_226 = insertelement <4 x float> %tmp_224, float %tmp_218, i32 1
  %tmp_228 = insertelement <4 x float> %tmp_226, float %tmp_218, i32 2
  %tmp_230 = insertelement <4 x float> %tmp_228, float %tmp_218, i32 3
  %tmp_231 = fadd <4 x float> %tmp_219, %tmp_230
  store <4 x float> %tmp_231, <4 x float>* %sum0
  %tmp_233 = load <4 x float>* %tempA0
  %tmp_234 = extractelement <4 x float> %tmp_233, i32 0
  %tmp_235 = load <4 x float>* %tempB0
  %tmp_236 = extractelement <4 x float> %tmp_235, i32 3
  %tmp_237 = fmul float %tmp_234, %tmp_236
  %tmp_238 = load <4 x float>* %tempA0
  %tmp_239 = extractelement <4 x float> %tmp_238, i32 1
  %tmp_240 = load <4 x float>* %tempB1
  %tmp_241 = extractelement <4 x float> %tmp_240, i32 3
  %tmp_242 = fmul float %tmp_239, %tmp_241
  %tmp_243 = fadd float %tmp_237, %tmp_242
  %tmp_244 = load <4 x float>* %tempA0
  %tmp_245 = extractelement <4 x float> %tmp_244, i32 2
  %tmp_246 = load <4 x float>* %tempB2
  %tmp_247 = extractelement <4 x float> %tmp_246, i32 3
  %tmp_248 = fmul float %tmp_245, %tmp_247
  %tmp_249 = fadd float %tmp_243, %tmp_248
  %tmp_250 = load <4 x float>* %tempA0
  %tmp_251 = extractelement <4 x float> %tmp_250, i32 3
  %tmp_252 = load <4 x float>* %tempB3
  %tmp_253 = extractelement <4 x float> %tmp_252, i32 3
  %tmp_254 = fmul float %tmp_251, %tmp_253
  %tmp_255 = fadd float %tmp_249, %tmp_254
  %tmp_256 = load <4 x float>* %sum0
  %tmp_259 = load <4 x float>* %tmp_258
  %tmp_261 = insertelement <4 x float> %tmp_259, float %tmp_255, i32 0
  %tmp_263 = insertelement <4 x float> %tmp_261, float %tmp_255, i32 1
  %tmp_265 = insertelement <4 x float> %tmp_263, float %tmp_255, i32 2
  %tmp_267 = insertelement <4 x float> %tmp_265, float %tmp_255, i32 3
  %tmp_268 = fadd <4 x float> %tmp_256, %tmp_267
  store <4 x float> %tmp_268, <4 x float>* %sum0
  %tmp_270 = load <4 x float>* %tempA1
  %tmp_271 = extractelement <4 x float> %tmp_270, i32 0
  %tmp_272 = load <4 x float>* %tempB0
  %tmp_273 = extractelement <4 x float> %tmp_272, i32 0
  %tmp_274 = fmul float %tmp_271, %tmp_273
  %tmp_275 = load <4 x float>* %tempA1
  %tmp_276 = extractelement <4 x float> %tmp_275, i32 1
  %tmp_277 = load <4 x float>* %tempB1
  %tmp_278 = extractelement <4 x float> %tmp_277, i32 0
  %tmp_279 = fmul float %tmp_276, %tmp_278
  %tmp_280 = fadd float %tmp_274, %tmp_279
  %tmp_281 = load <4 x float>* %tempA1
  %tmp_282 = extractelement <4 x float> %tmp_281, i32 2
  %tmp_283 = load <4 x float>* %tempB2
  %tmp_284 = extractelement <4 x float> %tmp_283, i32 0
  %tmp_285 = fmul float %tmp_282, %tmp_284
  %tmp_286 = fadd float %tmp_280, %tmp_285
  %tmp_287 = load <4 x float>* %tempA1
  %tmp_288 = extractelement <4 x float> %tmp_287, i32 3
  %tmp_289 = load <4 x float>* %tempB3
  %tmp_290 = extractelement <4 x float> %tmp_289, i32 0
  %tmp_291 = fmul float %tmp_288, %tmp_290
  %tmp_292 = fadd float %tmp_286, %tmp_291
  %tmp_293 = load <4 x float>* %sum1
  %tmp_296 = load <4 x float>* %tmp_295
  %tmp_298 = insertelement <4 x float> %tmp_296, float %tmp_292, i32 0
  %tmp_300 = insertelement <4 x float> %tmp_298, float %tmp_292, i32 1
  %tmp_302 = insertelement <4 x float> %tmp_300, float %tmp_292, i32 2
  %tmp_304 = insertelement <4 x float> %tmp_302, float %tmp_292, i32 3
  %tmp_305 = fadd <4 x float> %tmp_293, %tmp_304
  store <4 x float> %tmp_305, <4 x float>* %sum1
  %tmp_307 = load <4 x float>* %tempA1
  %tmp_308 = extractelement <4 x float> %tmp_307, i32 0
  %tmp_309 = load <4 x float>* %tempB0
  %tmp_310 = extractelement <4 x float> %tmp_309, i32 1
  %tmp_311 = fmul float %tmp_308, %tmp_310
  %tmp_312 = load <4 x float>* %tempA1
  %tmp_313 = extractelement <4 x float> %tmp_312, i32 1
  %tmp_314 = load <4 x float>* %tempB1
  %tmp_315 = extractelement <4 x float> %tmp_314, i32 1
  %tmp_316 = fmul float %tmp_313, %tmp_315
  %tmp_317 = fadd float %tmp_311, %tmp_316
  %tmp_318 = load <4 x float>* %tempA1
  %tmp_319 = extractelement <4 x float> %tmp_318, i32 2
  %tmp_320 = load <4 x float>* %tempB2
  %tmp_321 = extractelement <4 x float> %tmp_320, i32 1
  %tmp_322 = fmul float %tmp_319, %tmp_321
  %tmp_323 = fadd float %tmp_317, %tmp_322
  %tmp_324 = load <4 x float>* %tempA1
  %tmp_325 = extractelement <4 x float> %tmp_324, i32 3
  %tmp_326 = load <4 x float>* %tempB3
  %tmp_327 = extractelement <4 x float> %tmp_326, i32 1
  %tmp_328 = fmul float %tmp_325, %tmp_327
  %tmp_329 = fadd float %tmp_323, %tmp_328
  %tmp_330 = load <4 x float>* %sum1
  %tmp_333 = load <4 x float>* %tmp_332
  %tmp_335 = insertelement <4 x float> %tmp_333, float %tmp_329, i32 0
  %tmp_337 = insertelement <4 x float> %tmp_335, float %tmp_329, i32 1
  %tmp_339 = insertelement <4 x float> %tmp_337, float %tmp_329, i32 2
  %tmp_341 = insertelement <4 x float> %tmp_339, float %tmp_329, i32 3
  %tmp_342 = fadd <4 x float> %tmp_330, %tmp_341
  store <4 x float> %tmp_342, <4 x float>* %sum1
  %tmp_344 = load <4 x float>* %tempA1
  %tmp_345 = extractelement <4 x float> %tmp_344, i32 0
  %tmp_346 = load <4 x float>* %tempB0
  %tmp_347 = extractelement <4 x float> %tmp_346, i32 2
  %tmp_348 = fmul float %tmp_345, %tmp_347
  %tmp_349 = load <4 x float>* %tempA1
  %tmp_350 = extractelement <4 x float> %tmp_349, i32 1
  %tmp_351 = load <4 x float>* %tempB1
  %tmp_352 = extractelement <4 x float> %tmp_351, i32 2
  %tmp_353 = fmul float %tmp_350, %tmp_352
  %tmp_354 = fadd float %tmp_348, %tmp_353
  %tmp_355 = load <4 x float>* %tempA1
  %tmp_356 = extractelement <4 x float> %tmp_355, i32 2
  %tmp_357 = load <4 x float>* %tempB2
  %tmp_358 = extractelement <4 x float> %tmp_357, i32 2
  %tmp_359 = fmul float %tmp_356, %tmp_358
  %tmp_360 = fadd float %tmp_354, %tmp_359
  %tmp_361 = load <4 x float>* %tempA1
  %tmp_362 = extractelement <4 x float> %tmp_361, i32 3
  %tmp_363 = load <4 x float>* %tempB3
  %tmp_364 = extractelement <4 x float> %tmp_363, i32 2
  %tmp_365 = fmul float %tmp_362, %tmp_364
  %tmp_366 = fadd float %tmp_360, %tmp_365
  %tmp_367 = load <4 x float>* %sum1
  %tmp_370 = load <4 x float>* %tmp_369
  %tmp_372 = insertelement <4 x float> %tmp_370, float %tmp_366, i32 0
  %tmp_374 = insertelement <4 x float> %tmp_372, float %tmp_366, i32 1
  %tmp_376 = insertelement <4 x float> %tmp_374, float %tmp_366, i32 2
  %tmp_378 = insertelement <4 x float> %tmp_376, float %tmp_366, i32 3
  %tmp_379 = fadd <4 x float> %tmp_367, %tmp_378
  store <4 x float> %tmp_379, <4 x float>* %sum1
  %tmp_381 = load <4 x float>* %tempA1
  %tmp_382 = extractelement <4 x float> %tmp_381, i32 0
  %tmp_383 = load <4 x float>* %tempB0
  %tmp_384 = extractelement <4 x float> %tmp_383, i32 3
  %tmp_385 = fmul float %tmp_382, %tmp_384
  %tmp_386 = load <4 x float>* %tempA1
  %tmp_387 = extractelement <4 x float> %tmp_386, i32 1
  %tmp_388 = load <4 x float>* %tempB1
  %tmp_389 = extractelement <4 x float> %tmp_388, i32 3
  %tmp_390 = fmul float %tmp_387, %tmp_389
  %tmp_391 = fadd float %tmp_385, %tmp_390
  %tmp_392 = load <4 x float>* %tempA1
  %tmp_393 = extractelement <4 x float> %tmp_392, i32 2
  %tmp_394 = load <4 x float>* %tempB2
  %tmp_395 = extractelement <4 x float> %tmp_394, i32 3
  %tmp_396 = fmul float %tmp_393, %tmp_395
  %tmp_397 = fadd float %tmp_391, %tmp_396
  %tmp_398 = load <4 x float>* %tempA1
  %tmp_399 = extractelement <4 x float> %tmp_398, i32 3
  %tmp_400 = load <4 x float>* %tempB3
  %tmp_401 = extractelement <4 x float> %tmp_400, i32 3
  %tmp_40210 = fmul float %tmp_399, %tmp_401
  %tmp_403 = fadd float %tmp_397, %tmp_40210
  %tmp_404 = load <4 x float>* %sum1
  %tmp_407 = load <4 x float>* %tmp_406
  %tmp_409 = insertelement <4 x float> %tmp_407, float %tmp_403, i32 0
  %tmp_411 = insertelement <4 x float> %tmp_409, float %tmp_403, i32 1
  %tmp_413 = insertelement <4 x float> %tmp_411, float %tmp_403, i32 2
  %tmp_415 = insertelement <4 x float> %tmp_413, float %tmp_403, i32 3
  %tmp_416 = fadd <4 x float> %tmp_404, %tmp_415
  store <4 x float> %tmp_416, <4 x float>* %sum1
  %tmp_418 = load <4 x float>* %tempA2
  %tmp_419 = extractelement <4 x float> %tmp_418, i32 0
  %tmp_420 = load <4 x float>* %tempB0
  %tmp_421 = extractelement <4 x float> %tmp_420, i32 0
  %tmp_422 = fmul float %tmp_419, %tmp_421
  %tmp_423 = load <4 x float>* %tempA2
  %tmp_424 = extractelement <4 x float> %tmp_423, i32 1
  %tmp_425 = load <4 x float>* %tempB1
  %tmp_426 = extractelement <4 x float> %tmp_425, i32 0
  %tmp_427 = fmul float %tmp_424, %tmp_426
  %tmp_428 = fadd float %tmp_422, %tmp_427
  %tmp_429 = load <4 x float>* %tempA2
  %tmp_430 = extractelement <4 x float> %tmp_429, i32 2
  %tmp_431 = load <4 x float>* %tempB2
  %tmp_432 = extractelement <4 x float> %tmp_431, i32 0
  %tmp_433 = fmul float %tmp_430, %tmp_432
  %tmp_434 = fadd float %tmp_428, %tmp_433
  %tmp_435 = load <4 x float>* %tempA2
  %tmp_436 = extractelement <4 x float> %tmp_435, i32 3
  %tmp_437 = load <4 x float>* %tempB3
  %tmp_438 = extractelement <4 x float> %tmp_437, i32 0
  %tmp_439 = fmul float %tmp_436, %tmp_438
  %tmp_440 = fadd float %tmp_434, %tmp_439
  %tmp_441 = load <4 x float>* %sum2
  %tmp_444 = load <4 x float>* %tmp_443
  %tmp_446 = insertelement <4 x float> %tmp_444, float %tmp_440, i32 0
  %tmp_448 = insertelement <4 x float> %tmp_446, float %tmp_440, i32 1
  %tmp_450 = insertelement <4 x float> %tmp_448, float %tmp_440, i32 2
  %tmp_452 = insertelement <4 x float> %tmp_450, float %tmp_440, i32 3
  %tmp_453 = fadd <4 x float> %tmp_441, %tmp_452
  store <4 x float> %tmp_453, <4 x float>* %sum2
  %tmp_455 = load <4 x float>* %tempA2
  %tmp_456 = extractelement <4 x float> %tmp_455, i32 0
  %tmp_457 = load <4 x float>* %tempB0
  %tmp_458 = extractelement <4 x float> %tmp_457, i32 1
  %tmp_459 = fmul float %tmp_456, %tmp_458
  %tmp_460 = load <4 x float>* %tempA2
  %tmp_461 = extractelement <4 x float> %tmp_460, i32 1
  %tmp_462 = load <4 x float>* %tempB1
  %tmp_463 = extractelement <4 x float> %tmp_462, i32 1
  %tmp_464 = fmul float %tmp_461, %tmp_463
  %tmp_465 = fadd float %tmp_459, %tmp_464
  %tmp_466 = load <4 x float>* %tempA2
  %tmp_467 = extractelement <4 x float> %tmp_466, i32 2
  %tmp_468 = load <4 x float>* %tempB2
  %tmp_469 = extractelement <4 x float> %tmp_468, i32 1
  %tmp_470 = fmul float %tmp_467, %tmp_469
  %tmp_471 = fadd float %tmp_465, %tmp_470
  %tmp_472 = load <4 x float>* %tempA2
  %tmp_473 = extractelement <4 x float> %tmp_472, i32 3
  %tmp_474 = load <4 x float>* %tempB3
  %tmp_475 = extractelement <4 x float> %tmp_474, i32 1
  %tmp_476 = fmul float %tmp_473, %tmp_475
  %tmp_477 = fadd float %tmp_471, %tmp_476
  %tmp_478 = load <4 x float>* %sum2
  %tmp_481 = load <4 x float>* %tmp_480
  %tmp_483 = insertelement <4 x float> %tmp_481, float %tmp_477, i32 0
  %tmp_485 = insertelement <4 x float> %tmp_483, float %tmp_477, i32 1
  %tmp_487 = insertelement <4 x float> %tmp_485, float %tmp_477, i32 2
  %tmp_489 = insertelement <4 x float> %tmp_487, float %tmp_477, i32 3
  %tmp_490 = fadd <4 x float> %tmp_478, %tmp_489
  store <4 x float> %tmp_490, <4 x float>* %sum2
  %tmp_492 = load <4 x float>* %tempA2
  %tmp_493 = extractelement <4 x float> %tmp_492, i32 0
  %tmp_494 = load <4 x float>* %tempB0
  %tmp_495 = extractelement <4 x float> %tmp_494, i32 2
  %tmp_496 = fmul float %tmp_493, %tmp_495
  %tmp_497 = load <4 x float>* %tempA2
  %tmp_498 = extractelement <4 x float> %tmp_497, i32 1
  %tmp_499 = load <4 x float>* %tempB1
  %tmp_500 = extractelement <4 x float> %tmp_499, i32 2
  %tmp_501 = fmul float %tmp_498, %tmp_500
  %tmp_502 = fadd float %tmp_496, %tmp_501
  %tmp_503 = load <4 x float>* %tempA2
  %tmp_504 = extractelement <4 x float> %tmp_503, i32 2
  %tmp_505 = load <4 x float>* %tempB2
  %tmp_506 = extractelement <4 x float> %tmp_505, i32 2
  %tmp_507 = fmul float %tmp_504, %tmp_506
  %tmp_508 = fadd float %tmp_502, %tmp_507
  %tmp_509 = load <4 x float>* %tempA2
  %tmp_510 = extractelement <4 x float> %tmp_509, i32 3
  %tmp_511 = load <4 x float>* %tempB3
  %tmp_512 = extractelement <4 x float> %tmp_511, i32 2
  %tmp_513 = fmul float %tmp_510, %tmp_512
  %tmp_514 = fadd float %tmp_508, %tmp_513
  %tmp_515 = load <4 x float>* %sum2
  %tmp_518 = load <4 x float>* %tmp_517
  %tmp_520 = insertelement <4 x float> %tmp_518, float %tmp_514, i32 0
  %tmp_522 = insertelement <4 x float> %tmp_520, float %tmp_514, i32 1
  %tmp_524 = insertelement <4 x float> %tmp_522, float %tmp_514, i32 2
  %tmp_526 = insertelement <4 x float> %tmp_524, float %tmp_514, i32 3
  %tmp_527 = fadd <4 x float> %tmp_515, %tmp_526
  store <4 x float> %tmp_527, <4 x float>* %sum2
  %tmp_529 = load <4 x float>* %tempA2
  %tmp_530 = extractelement <4 x float> %tmp_529, i32 0
  %tmp_531 = load <4 x float>* %tempB0
  %tmp_532 = extractelement <4 x float> %tmp_531, i32 3
  %tmp_53311 = fmul float %tmp_530, %tmp_532
  %tmp_534 = load <4 x float>* %tempA2
  %tmp_535 = extractelement <4 x float> %tmp_534, i32 1
  %tmp_536 = load <4 x float>* %tempB1
  %tmp_537 = extractelement <4 x float> %tmp_536, i32 3
  %tmp_538 = fmul float %tmp_535, %tmp_537
  %tmp_539 = fadd float %tmp_53311, %tmp_538
  %tmp_540 = load <4 x float>* %tempA2
  %tmp_541 = extractelement <4 x float> %tmp_540, i32 2
  %tmp_542 = load <4 x float>* %tempB2
  %tmp_543 = extractelement <4 x float> %tmp_542, i32 3
  %tmp_544 = fmul float %tmp_541, %tmp_543
  %tmp_545 = fadd float %tmp_539, %tmp_544
  %tmp_546 = load <4 x float>* %tempA2
  %tmp_547 = extractelement <4 x float> %tmp_546, i32 3
  %tmp_548 = load <4 x float>* %tempB3
  %tmp_549 = extractelement <4 x float> %tmp_548, i32 3
  %tmp_550 = fmul float %tmp_547, %tmp_549
  %tmp_551 = fadd float %tmp_545, %tmp_550
  %tmp_552 = load <4 x float>* %sum2
  %tmp_555 = load <4 x float>* %tmp_554
  %tmp_557 = insertelement <4 x float> %tmp_555, float %tmp_551, i32 0
  %tmp_559 = insertelement <4 x float> %tmp_557, float %tmp_551, i32 1
  %tmp_561 = insertelement <4 x float> %tmp_559, float %tmp_551, i32 2
  %tmp_563 = insertelement <4 x float> %tmp_561, float %tmp_551, i32 3
  %tmp_564 = fadd <4 x float> %tmp_552, %tmp_563
  store <4 x float> %tmp_564, <4 x float>* %sum2
  %tmp_566 = load <4 x float>* %tempA3
  %tmp_567 = extractelement <4 x float> %tmp_566, i32 0
  %tmp_568 = load <4 x float>* %tempB0
  %tmp_569 = extractelement <4 x float> %tmp_568, i32 0
  %tmp_570 = fmul float %tmp_567, %tmp_569
  %tmp_571 = load <4 x float>* %tempA3
  %tmp_572 = extractelement <4 x float> %tmp_571, i32 1
  %tmp_573 = load <4 x float>* %tempB1
  %tmp_574 = extractelement <4 x float> %tmp_573, i32 0
  %tmp_575 = fmul float %tmp_572, %tmp_574
  %tmp_576 = fadd float %tmp_570, %tmp_575
  %tmp_577 = load <4 x float>* %tempA3
  %tmp_578 = extractelement <4 x float> %tmp_577, i32 2
  %tmp_579 = load <4 x float>* %tempB2
  %tmp_580 = extractelement <4 x float> %tmp_579, i32 0
  %tmp_581 = fmul float %tmp_578, %tmp_580
  %tmp_582 = fadd float %tmp_576, %tmp_581
  %tmp_583 = load <4 x float>* %tempA3
  %tmp_584 = extractelement <4 x float> %tmp_583, i32 3
  %tmp_585 = load <4 x float>* %tempB3
  %tmp_586 = extractelement <4 x float> %tmp_585, i32 0
  %tmp_587 = fmul float %tmp_584, %tmp_586
  %tmp_588 = fadd float %tmp_582, %tmp_587
  %tmp_589 = load <4 x float>* %sum3
  %tmp_592 = load <4 x float>* %tmp_591
  %tmp_594 = insertelement <4 x float> %tmp_592, float %tmp_588, i32 0
  %tmp_596 = insertelement <4 x float> %tmp_594, float %tmp_588, i32 1
  %tmp_598 = insertelement <4 x float> %tmp_596, float %tmp_588, i32 2
  %tmp_600 = insertelement <4 x float> %tmp_598, float %tmp_588, i32 3
  %tmp_601 = fadd <4 x float> %tmp_589, %tmp_600
  store <4 x float> %tmp_601, <4 x float>* %sum3
  %tmp_603 = load <4 x float>* %tempA3
  %tmp_604 = extractelement <4 x float> %tmp_603, i32 0
  %tmp_605 = load <4 x float>* %tempB0
  %tmp_606 = extractelement <4 x float> %tmp_605, i32 1
  %tmp_607 = fmul float %tmp_604, %tmp_606
  %tmp_608 = load <4 x float>* %tempA3
  %tmp_609 = extractelement <4 x float> %tmp_608, i32 1
  %tmp_610 = load <4 x float>* %tempB1
  %tmp_611 = extractelement <4 x float> %tmp_610, i32 1
  %tmp_612 = fmul float %tmp_609, %tmp_611
  %tmp_613 = fadd float %tmp_607, %tmp_612
  %tmp_614 = load <4 x float>* %tempA3
  %tmp_615 = extractelement <4 x float> %tmp_614, i32 2
  %tmp_616 = load <4 x float>* %tempB2
  %tmp_617 = extractelement <4 x float> %tmp_616, i32 1
  %tmp_618 = fmul float %tmp_615, %tmp_617
  %tmp_619 = fadd float %tmp_613, %tmp_618
  %tmp_620 = load <4 x float>* %tempA3
  %tmp_621 = extractelement <4 x float> %tmp_620, i32 3
  %tmp_622 = load <4 x float>* %tempB3
  %tmp_623 = extractelement <4 x float> %tmp_622, i32 1
  %tmp_624 = fmul float %tmp_621, %tmp_623
  %tmp_625 = fadd float %tmp_619, %tmp_624
  %tmp_626 = load <4 x float>* %sum3
  %tmp_629 = load <4 x float>* %tmp_628
  %tmp_631 = insertelement <4 x float> %tmp_629, float %tmp_625, i32 0
  %tmp_633 = insertelement <4 x float> %tmp_631, float %tmp_625, i32 1
  %tmp_635 = insertelement <4 x float> %tmp_633, float %tmp_625, i32 2
  %tmp_637 = insertelement <4 x float> %tmp_635, float %tmp_625, i32 3
  %tmp_638 = fadd <4 x float> %tmp_626, %tmp_637
  store <4 x float> %tmp_638, <4 x float>* %sum3
  %tmp_640 = load <4 x float>* %tempA3
  %tmp_641 = extractelement <4 x float> %tmp_640, i32 0
  %tmp_642 = load <4 x float>* %tempB0
  %tmp_643 = extractelement <4 x float> %tmp_642, i32 2
  %tmp_644 = fmul float %tmp_641, %tmp_643
  %tmp_645 = load <4 x float>* %tempA3
  %tmp_646 = extractelement <4 x float> %tmp_645, i32 1
  %tmp_647 = load <4 x float>* %tempB1
  %tmp_648 = extractelement <4 x float> %tmp_647, i32 2
  %tmp_649 = fmul float %tmp_646, %tmp_648
  %tmp_650 = fadd float %tmp_644, %tmp_649
  %tmp_651 = load <4 x float>* %tempA3
  %tmp_652 = extractelement <4 x float> %tmp_651, i32 2
  %tmp_653 = load <4 x float>* %tempB2
  %tmp_654 = extractelement <4 x float> %tmp_653, i32 2
  %tmp_655 = fmul float %tmp_652, %tmp_654
  %tmp_656 = fadd float %tmp_650, %tmp_655
  %tmp_657 = load <4 x float>* %tempA3
  %tmp_658 = extractelement <4 x float> %tmp_657, i32 3
  %tmp_659 = load <4 x float>* %tempB3
  %tmp_660 = extractelement <4 x float> %tmp_659, i32 2
  %tmp_661 = fmul float %tmp_658, %tmp_660
  %tmp_662 = fadd float %tmp_656, %tmp_661
  %tmp_663 = load <4 x float>* %sum3
  %tmp_666 = load <4 x float>* %tmp_665
  %tmp_668 = insertelement <4 x float> %tmp_666, float %tmp_662, i32 0
  %tmp_670 = insertelement <4 x float> %tmp_668, float %tmp_662, i32 1
  %tmp_672 = insertelement <4 x float> %tmp_670, float %tmp_662, i32 2
  %tmp_674 = insertelement <4 x float> %tmp_672, float %tmp_662, i32 3
  %tmp_675 = fadd <4 x float> %tmp_663, %tmp_674
  store <4 x float> %tmp_675, <4 x float>* %sum3
  %tmp_677 = load <4 x float>* %tempA3
  %tmp_678 = extractelement <4 x float> %tmp_677, i32 0
  %tmp_679 = load <4 x float>* %tempB0
  %tmp_680 = extractelement <4 x float> %tmp_679, i32 3
  %tmp_681 = fmul float %tmp_678, %tmp_680
  %tmp_682 = load <4 x float>* %tempA3
  %tmp_683 = extractelement <4 x float> %tmp_682, i32 1
  %tmp_684 = load <4 x float>* %tempB1
  %tmp_685 = extractelement <4 x float> %tmp_684, i32 3
  %tmp_686 = fmul float %tmp_683, %tmp_685
  %tmp_687 = fadd float %tmp_681, %tmp_686
  %tmp_688 = load <4 x float>* %tempA3
  %tmp_689 = extractelement <4 x float> %tmp_688, i32 2
  %tmp_690 = load <4 x float>* %tempB2
  %tmp_691 = extractelement <4 x float> %tmp_690, i32 3
  %tmp_692 = fmul float %tmp_689, %tmp_691
  %tmp_693 = fadd float %tmp_687, %tmp_692
  %tmp_694 = load <4 x float>* %tempA3
  %tmp_695 = extractelement <4 x float> %tmp_694, i32 3
  %tmp_696 = load <4 x float>* %tempB3
  %tmp_697 = extractelement <4 x float> %tmp_696, i32 3
  %tmp_698 = fmul float %tmp_695, %tmp_697
  %tmp_699 = fadd float %tmp_693, %tmp_698
  %tmp_700 = load <4 x float>* %sum3
  %tmp_703 = load <4 x float>* %tmp_702
  %tmp_705 = insertelement <4 x float> %tmp_703, float %tmp_699, i32 0
  %tmp_707 = insertelement <4 x float> %tmp_705, float %tmp_699, i32 1
  %tmp_709 = insertelement <4 x float> %tmp_707, float %tmp_699, i32 2
  %tmp_711 = insertelement <4 x float> %tmp_709, float %tmp_699, i32 3
  %tmp_712 = fadd <4 x float> %tmp_700, %tmp_711
  store <4 x float> %tmp_712, <4 x float>* %sum3
  br label %block_4

block_4:                                          ; preds = %block_3
  %tmp_30 = load i32* %i
  %tmp_31 = add i32 %tmp_30, 4
  store i32 %tmp_31, i32* %i
  br label %block_2

block_5:                                          ; preds = %block_2
  %tmp_714 = load <2 x i32>* %pos
  %tmp_715 = extractelement <2 x i32> %tmp_714, i32 0
  %tmp_716 = load <2 x i32>* %pos
  %tmp_717 = extractelement <2 x i32> %tmp_716, i32 1
  %tmp_718 = shl i32 %tmp_717, 2
  %tmp_719 = add i32 %tmp_718, 0
  %tmp_720 = load i32* %widthB_addr
  %tmp_722 = mul i32 %tmp_719, %tmp_720
  %tmp_72212 = add i32 %tmp_715, %tmp_722
  %tmp_723 = load <4 x float> addrspace(1)** %matrixC_addr
  %tmp_724 = getelementptr <4 x float> addrspace(1)* %tmp_723, i32 %tmp_72212
  %tmp_725 = load <4 x float>* %sum0
  store <4 x float> %tmp_725, <4 x float> addrspace(1)* %tmp_724
  %tmp_727 = load <2 x i32>* %pos
  %tmp_728 = extractelement <2 x i32> %tmp_727, i32 0
  %tmp_729 = load <2 x i32>* %pos
  %tmp_730 = extractelement <2 x i32> %tmp_729, i32 1
  %tmp_731 = shl i32 %tmp_730, 2
  %tmp_732 = add i32 %tmp_731, 1
  %tmp_733 = load i32* %widthB_addr
  %tmp_735 = mul i32 %tmp_732, %tmp_733
  %tmp_73513 = add i32 %tmp_728, %tmp_735
  %tmp_736 = load <4 x float> addrspace(1)** %matrixC_addr
  %tmp_737 = getelementptr <4 x float> addrspace(1)* %tmp_736, i32 %tmp_73513
  %tmp_738 = load <4 x float>* %sum1
  store <4 x float> %tmp_738, <4 x float> addrspace(1)* %tmp_737
  %tmp_740 = load <2 x i32>* %pos
  %tmp_741 = extractelement <2 x i32> %tmp_740, i32 0
  %tmp_742 = load <2 x i32>* %pos
  %tmp_743 = extractelement <2 x i32> %tmp_742, i32 1
  %tmp_744 = shl i32 %tmp_743, 2
  %tmp_745 = add i32 %tmp_744, 2
  %tmp_746 = load i32* %widthB_addr
  %tmp_748 = mul i32 %tmp_745, %tmp_746
  %tmp_74814 = add i32 %tmp_741, %tmp_748
  %tmp_749 = load <4 x float> addrspace(1)** %matrixC_addr
  %tmp_750 = getelementptr <4 x float> addrspace(1)* %tmp_749, i32 %tmp_74814
  %tmp_751 = load <4 x float>* %sum2
  store <4 x float> %tmp_751, <4 x float> addrspace(1)* %tmp_750
  %tmp_753 = load <2 x i32>* %pos
  %tmp_754 = extractelement <2 x i32> %tmp_753, i32 0
  %tmp_755 = load <2 x i32>* %pos
  %tmp_756 = extractelement <2 x i32> %tmp_755, i32 1
  %tmp_757 = shl i32 %tmp_756, 2
  %tmp_758 = add i32 %tmp_757, 3
  %tmp_759 = load i32* %widthB_addr
  %tmp_761 = mul i32 %tmp_758, %tmp_759
  %tmp_76115 = add i32 %tmp_754, %tmp_761
  %tmp_762 = load <4 x float> addrspace(1)** %matrixC_addr
  %tmp_763 = getelementptr <4 x float> addrspace(1)* %tmp_762, i32 %tmp_76115
  %tmp_764 = load <4 x float>* %sum3
  store <4 x float> %tmp_764, <4 x float> addrspace(1)* %tmp_763
  ret void
}

; Function Attrs: nounwind
declare i32 @__get_global_id_u32(i32) #0

define void @mmmKernel_local(<4 x float> addrspace(1)* %matrixA, <4 x float> addrspace(1)* %matrixB, <4 x float> addrspace(1)* %matrixC, i32 %widthA, <4 x float>* %blockA) {
block_6:
  %matrixA_addr = alloca <4 x float> addrspace(1)*
  store <4 x float> addrspace(1)* %matrixA, <4 x float> addrspace(1)** %matrixA_addr
  %matrixB_addr = alloca <4 x float> addrspace(1)*
  store <4 x float> addrspace(1)* %matrixB, <4 x float> addrspace(1)** %matrixB_addr
  %matrixC_addr = alloca <4 x float> addrspace(1)*
  store <4 x float> addrspace(1)* %matrixC, <4 x float> addrspace(1)** %matrixC_addr
  %widthA_addr = alloca i32
  store i32 %widthA, i32* %widthA_addr
  %blockA_addr = alloca <4 x float>*
  store <4 x float>* %blockA, <4 x float>** %blockA_addr
  %blockPos = alloca i32
  %globalPos = alloca i32
  %tmp_779 = alloca <4 x float>
  %sum0 = alloca <4 x float>
  %tmp_783 = alloca <4 x float>
  %sum1 = alloca <4 x float>
  %tmp_787 = alloca <4 x float>
  %sum2 = alloca <4 x float>
  %tmp_791 = alloca <4 x float>
  %sum3 = alloca <4 x float>
  %temp = alloca i32
  %i = alloca i32
  %globalPosA = alloca i32
  %globalPosB = alloca i32
  %j = alloca i32
  %tempA0 = alloca <4 x float>
  %tempA1 = alloca <4 x float>
  %tempA2 = alloca <4 x float>
  %tempA3 = alloca <4 x float>
  %tempB0 = alloca <4 x float>
  %tempB1 = alloca <4 x float>
  %tempB2 = alloca <4 x float>
  %tempB3 = alloca <4 x float>
  %tmp_982 = alloca <4 x float>
  %tmp_1019 = alloca <4 x float>
  %tmp_1056 = alloca <4 x float>
  %tmp_1093 = alloca <4 x float>
  %tmp_1130 = alloca <4 x float>
  %tmp_1167 = alloca <4 x float>
  %tmp_1204 = alloca <4 x float>
  %tmp_1241 = alloca <4 x float>
  %tmp_1278 = alloca <4 x float>
  %tmp_1315 = alloca <4 x float>
  %tmp_1352 = alloca <4 x float>
  %tmp_1389 = alloca <4 x float>
  %tmp_1426 = alloca <4 x float>
  %tmp_1463 = alloca <4 x float>
  %tmp_1500 = alloca <4 x float>
  %tmp_1537 = alloca <4 x float>
  br label %block_7

block_7:                                          ; preds = %block_6
  %tmp_766 = call i32 @__get_local_id_u32(i32 0)
  %tmp_767 = call i32 @__get_local_size_u32(i32 0)
  %tmp_768 = call i32 @__get_local_id_u32(i32 1)
  %tmp_770 = shl i32 %tmp_768, 2
  %tmp_7701 = mul i32 %tmp_767, %tmp_770
  %tmp_771 = add i32 %tmp_766, %tmp_7701
  store i32 %tmp_771, i32* %blockPos
  %tmp_772 = call i32 @__get_global_id_u32(i32 0)
  %tmp_773 = call i32 @__get_global_id_u32(i32 1)
  %tmp_775 = shl i32 %tmp_773, 2
  %tmp_7752 = call i32 @__get_global_size_u32(i32 0)
  %tmp_776 = mul i32 %tmp_775, %tmp_7752
  %tmp_777 = add i32 %tmp_772, %tmp_776
  store i32 %tmp_777, i32* %globalPos
  %tmp_780 = load <4 x float>* %tmp_779
  store <4 x float> zeroinitializer, <4 x float>* %sum0
  %tmp_784 = load <4 x float>* %tmp_783
  store <4 x float> zeroinitializer, <4 x float>* %sum1
  %tmp_788 = load <4 x float>* %tmp_787
  store <4 x float> zeroinitializer, <4 x float>* %sum2
  %tmp_792 = load <4 x float>* %tmp_791
  store <4 x float> zeroinitializer, <4 x float>* %sum3
  %tmp_794 = load i32* %widthA_addr
  %tmp_795 = sdiv i32 %tmp_794, 4
  store i32 %tmp_795, i32* %temp
  store i32 0, i32* %i
  br label %block_8

block_8:                                          ; preds = %block_10, %block_7
  %tmp_796 = load i32* %i
  %tmp_797 = load i32* %temp
  %tmp_798 = call i32 @__get_local_size_u32(i32 0)
  %tmp_800 = sdiv i32 %tmp_797, %tmp_798
  %tmp_8003 = icmp slt i32 %tmp_796, %tmp_800
  %tmp_801 = sext i1 %tmp_8003 to i32
  %tmp_802 = icmp ne i32 %tmp_801, 0
  br i1 %tmp_802, label %block_9, label %block_11

block_9:                                          ; preds = %block_8
  %tmp_805 = load i32* %i
  %tmp_806 = call i32 @__get_local_size_u32(i32 0)
  %tmp_808 = mul i32 %tmp_805, %tmp_806
  %tmp_8084 = call i32 @__get_local_id_u32(i32 0)
  %tmp_809 = add i32 %tmp_808, %tmp_8084
  %tmp_810 = call i32 @__get_global_id_u32(i32 1)
  %tmp_812 = shl i32 %tmp_810, 2
  %tmp_8125 = load i32* %temp
  %tmp_814 = mul i32 %tmp_812, %tmp_8125
  %tmp_8146 = add i32 %tmp_809, %tmp_814
  store i32 %tmp_8146, i32* %globalPosA
  %tmp_815 = load i32* %blockPos
  %tmp_816 = load <4 x float>** %blockA_addr
  %tmp_817 = getelementptr <4 x float>* %tmp_816, i32 %tmp_815
  %tmp_818 = load i32* %globalPosA
  %tmp_819 = load <4 x float> addrspace(1)** %matrixA_addr
  %tmp_820 = getelementptr <4 x float> addrspace(1)* %tmp_819, i32 %tmp_818
  %tmp_821 = load <4 x float> addrspace(1)* %tmp_820
  store <4 x float> %tmp_821, <4 x float>* %tmp_817
  %tmp_823 = load i32* %blockPos
  %tmp_824 = call i32 @__get_local_size_u32(i32 0)
  %tmp_825 = add i32 %tmp_823, %tmp_824
  %tmp_826 = load <4 x float>** %blockA_addr
  %tmp_827 = getelementptr <4 x float>* %tmp_826, i32 %tmp_825
  %tmp_828 = load i32* %globalPosA
  %tmp_829 = load i32* %temp
  %tmp_830 = add i32 %tmp_828, %tmp_829
  %tmp_831 = load <4 x float> addrspace(1)** %matrixA_addr
  %tmp_832 = getelementptr <4 x float> addrspace(1)* %tmp_831, i32 %tmp_830
  %tmp_833 = load <4 x float> addrspace(1)* %tmp_832
  store <4 x float> %tmp_833, <4 x float>* %tmp_827
  %tmp_835 = load i32* %blockPos
  %tmp_836 = call i32 @__get_local_size_u32(i32 0)
  %tmp_838 = mul i32 2, %tmp_836
  %tmp_8387 = add i32 %tmp_835, %tmp_838
  %tmp_839 = load <4 x float>** %blockA_addr
  %tmp_840 = getelementptr <4 x float>* %tmp_839, i32 %tmp_8387
  %tmp_841 = load i32* %globalPosA
  %tmp_842 = load i32* %temp
  %tmp_843 = mul i32 2, %tmp_842
  %tmp_844 = add i32 %tmp_841, %tmp_843
  %tmp_845 = load <4 x float> addrspace(1)** %matrixA_addr
  %tmp_846 = getelementptr <4 x float> addrspace(1)* %tmp_845, i32 %tmp_844
  %tmp_847 = load <4 x float> addrspace(1)* %tmp_846
  store <4 x float> %tmp_847, <4 x float>* %tmp_840
  %tmp_849 = load i32* %blockPos
  %tmp_850 = call i32 @__get_local_size_u32(i32 0)
  %tmp_852 = mul i32 3, %tmp_850
  %tmp_8528 = add i32 %tmp_849, %tmp_852
  %tmp_853 = load <4 x float>** %blockA_addr
  %tmp_854 = getelementptr <4 x float>* %tmp_853, i32 %tmp_8528
  %tmp_855 = load i32* %globalPosA
  %tmp_856 = load i32* %temp
  %tmp_857 = mul i32 3, %tmp_856
  %tmp_858 = add i32 %tmp_855, %tmp_857
  %tmp_859 = load <4 x float> addrspace(1)** %matrixA_addr
  %tmp_860 = getelementptr <4 x float> addrspace(1)* %tmp_859, i32 %tmp_858
  %tmp_861 = load <4 x float> addrspace(1)* %tmp_860
  store <4 x float> %tmp_861, <4 x float>* %tmp_854
  call void @__barrier_u32(i32 1)
  %tmp_863 = call i32 @__get_global_id_u32(i32 0)
  %tmp_864 = load i32* %i
  %tmp_865 = call i32 @__get_local_size_u32(i32 0)
  %tmp_867 = mul i32 %tmp_864, %tmp_865
  %tmp_8679 = shl i32 %tmp_867, 2
  %tmp_868 = call i32 @__get_global_size_u32(i32 0)
  %tmp_870 = mul i32 %tmp_8679, %tmp_868
  %tmp_87010 = add i32 %tmp_863, %tmp_870
  store i32 %tmp_87010, i32* %globalPosB
  store i32 0, i32* %j
  br label %block_12

block_10:                                         ; preds = %block_15
  %tmp_803 = load i32* %i
  %tmp_804 = add i32 %tmp_803, 1
  store i32 %tmp_804, i32* %i
  br label %block_8

block_11:                                         ; preds = %block_8
  %tmp_1549 = load i32* %globalPos
  %tmp_1550 = load <4 x float> addrspace(1)** %matrixC_addr
  %tmp_1551 = getelementptr <4 x float> addrspace(1)* %tmp_1550, i32 %tmp_1549
  %tmp_1552 = load <4 x float>* %sum0
  store <4 x float> %tmp_1552, <4 x float> addrspace(1)* %tmp_1551
  %tmp_1554 = load i32* %globalPos
  %tmp_1555 = call i32 @__get_global_size_u32(i32 0)
  %tmp_1556 = add i32 %tmp_1554, %tmp_1555
  %tmp_1557 = load <4 x float> addrspace(1)** %matrixC_addr
  %tmp_1558 = getelementptr <4 x float> addrspace(1)* %tmp_1557, i32 %tmp_1556
  %tmp_1559 = load <4 x float>* %sum1
  store <4 x float> %tmp_1559, <4 x float> addrspace(1)* %tmp_1558
  %tmp_1561 = load i32* %globalPos
  %tmp_1562 = call i32 @__get_global_size_u32(i32 0)
  %tmp_1564 = mul i32 2, %tmp_1562
  %tmp_156420 = add i32 %tmp_1561, %tmp_1564
  %tmp_1565 = load <4 x float> addrspace(1)** %matrixC_addr
  %tmp_1566 = getelementptr <4 x float> addrspace(1)* %tmp_1565, i32 %tmp_156420
  %tmp_1567 = load <4 x float>* %sum2
  store <4 x float> %tmp_1567, <4 x float> addrspace(1)* %tmp_1566
  %tmp_1569 = load i32* %globalPos
  %tmp_1570 = call i32 @__get_global_size_u32(i32 0)
  %tmp_1572 = mul i32 3, %tmp_1570
  %tmp_157221 = add i32 %tmp_1569, %tmp_1572
  %tmp_1573 = load <4 x float> addrspace(1)** %matrixC_addr
  %tmp_1574 = getelementptr <4 x float> addrspace(1)* %tmp_1573, i32 %tmp_157221
  %tmp_1575 = load <4 x float>* %sum3
  store <4 x float> %tmp_1575, <4 x float> addrspace(1)* %tmp_1574
  ret void

block_12:                                         ; preds = %block_14, %block_9
  %tmp_871 = load i32* %j
  %tmp_872 = call i32 @__get_local_size_u32(i32 0)
  %tmp_874 = mul i32 %tmp_872, 4
  %tmp_87411 = icmp slt i32 %tmp_871, %tmp_874
  %tmp_875 = sext i1 %tmp_87411 to i32
  %tmp_876 = icmp ne i32 %tmp_875, 0
  br i1 %tmp_876, label %block_13, label %block_15

block_13:                                         ; preds = %block_12
  %tmp_879 = load i32* %j
  %tmp_880 = ashr i32 %tmp_879, 2
  %tmp_881 = call i32 @__get_local_id_u32(i32 1)
  %tmp_883 = mul i32 %tmp_881, 4
  %tmp_88312 = call i32 @__get_local_size_u32(i32 0)
  %tmp_884 = mul i32 %tmp_883, %tmp_88312
  %tmp_885 = add i32 %tmp_880, %tmp_884
  %tmp_886 = load <4 x float>** %blockA_addr
  %tmp_887 = getelementptr <4 x float>* %tmp_886, i32 %tmp_885
  %tmp_888 = load <4 x float>* %tmp_887
  store <4 x float> %tmp_888, <4 x float>* %tempA0
  %tmp_889 = load i32* %j
  %tmp_890 = ashr i32 %tmp_889, 2
  %tmp_891 = call i32 @__get_local_id_u32(i32 1)
  %tmp_893 = mul i32 %tmp_891, 4
  %tmp_89313 = add i32 %tmp_893, 1
  %tmp_894 = call i32 @__get_local_size_u32(i32 0)
  %tmp_895 = mul i32 %tmp_89313, %tmp_894
  %tmp_896 = add i32 %tmp_890, %tmp_895
  %tmp_897 = load <4 x float>** %blockA_addr
  %tmp_898 = getelementptr <4 x float>* %tmp_897, i32 %tmp_896
  %tmp_899 = load <4 x float>* %tmp_898
  store <4 x float> %tmp_899, <4 x float>* %tempA1
  %tmp_900 = load i32* %j
  %tmp_901 = ashr i32 %tmp_900, 2
  %tmp_902 = call i32 @__get_local_id_u32(i32 1)
  %tmp_904 = mul i32 %tmp_902, 4
  %tmp_90414 = add i32 %tmp_904, 2
  %tmp_905 = call i32 @__get_local_size_u32(i32 0)
  %tmp_906 = mul i32 %tmp_90414, %tmp_905
  %tmp_907 = add i32 %tmp_901, %tmp_906
  %tmp_908 = load <4 x float>** %blockA_addr
  %tmp_909 = getelementptr <4 x float>* %tmp_908, i32 %tmp_907
  %tmp_910 = load <4 x float>* %tmp_909
  store <4 x float> %tmp_910, <4 x float>* %tempA2
  %tmp_911 = load i32* %j
  %tmp_912 = ashr i32 %tmp_911, 2
  %tmp_913 = call i32 @__get_local_id_u32(i32 1)
  %tmp_915 = mul i32 %tmp_913, 4
  %tmp_91515 = add i32 %tmp_915, 3
  %tmp_916 = call i32 @__get_local_size_u32(i32 0)
  %tmp_917 = mul i32 %tmp_91515, %tmp_916
  %tmp_918 = add i32 %tmp_912, %tmp_917
  %tmp_919 = load <4 x float>** %blockA_addr
  %tmp_920 = getelementptr <4 x float>* %tmp_919, i32 %tmp_918
  %tmp_921 = load <4 x float>* %tmp_920
  store <4 x float> %tmp_921, <4 x float>* %tempA3
  %tmp_922 = load i32* %globalPosB
  %tmp_923 = load i32* %j
  %tmp_924 = call i32 @__get_global_size_u32(i32 0)
  %tmp_926 = mul i32 %tmp_923, %tmp_924
  %tmp_92616 = add i32 %tmp_922, %tmp_926
  %tmp_927 = load <4 x float> addrspace(1)** %matrixB_addr
  %tmp_928 = getelementptr <4 x float> addrspace(1)* %tmp_927, i32 %tmp_92616
  %tmp_929 = load <4 x float> addrspace(1)* %tmp_928
  store <4 x float> %tmp_929, <4 x float>* %tempB0
  %tmp_930 = load i32* %globalPosB
  %tmp_931 = load i32* %j
  %tmp_932 = add i32 %tmp_931, 1
  %tmp_933 = call i32 @__get_global_size_u32(i32 0)
  %tmp_935 = mul i32 %tmp_932, %tmp_933
  %tmp_93517 = add i32 %tmp_930, %tmp_935
  %tmp_936 = load <4 x float> addrspace(1)** %matrixB_addr
  %tmp_937 = getelementptr <4 x float> addrspace(1)* %tmp_936, i32 %tmp_93517
  %tmp_938 = load <4 x float> addrspace(1)* %tmp_937
  store <4 x float> %tmp_938, <4 x float>* %tempB1
  %tmp_939 = load i32* %globalPosB
  %tmp_940 = load i32* %j
  %tmp_941 = add i32 %tmp_940, 2
  %tmp_942 = call i32 @__get_global_size_u32(i32 0)
  %tmp_944 = mul i32 %tmp_941, %tmp_942
  %tmp_94418 = add i32 %tmp_939, %tmp_944
  %tmp_945 = load <4 x float> addrspace(1)** %matrixB_addr
  %tmp_946 = getelementptr <4 x float> addrspace(1)* %tmp_945, i32 %tmp_94418
  %tmp_947 = load <4 x float> addrspace(1)* %tmp_946
  store <4 x float> %tmp_947, <4 x float>* %tempB2
  %tmp_948 = load i32* %globalPosB
  %tmp_949 = load i32* %j
  %tmp_950 = add i32 %tmp_949, 3
  %tmp_951 = call i32 @__get_global_size_u32(i32 0)
  %tmp_953 = mul i32 %tmp_950, %tmp_951
  %tmp_95319 = add i32 %tmp_948, %tmp_953
  %tmp_954 = load <4 x float> addrspace(1)** %matrixB_addr
  %tmp_955 = getelementptr <4 x float> addrspace(1)* %tmp_954, i32 %tmp_95319
  %tmp_956 = load <4 x float> addrspace(1)* %tmp_955
  store <4 x float> %tmp_956, <4 x float>* %tempB3
  %tmp_957 = load <4 x float>* %tempA0
  %tmp_958 = extractelement <4 x float> %tmp_957, i32 0
  %tmp_959 = load <4 x float>* %tempB0
  %tmp_960 = extractelement <4 x float> %tmp_959, i32 0
  %tmp_961 = fmul float %tmp_958, %tmp_960
  %tmp_962 = load <4 x float>* %tempA0
  %tmp_963 = extractelement <4 x float> %tmp_962, i32 1
  %tmp_964 = load <4 x float>* %tempB1
  %tmp_965 = extractelement <4 x float> %tmp_964, i32 0
  %tmp_966 = fmul float %tmp_963, %tmp_965
  %tmp_967 = fadd float %tmp_961, %tmp_966
  %tmp_968 = load <4 x float>* %tempA0
  %tmp_969 = extractelement <4 x float> %tmp_968, i32 2
  %tmp_970 = load <4 x float>* %tempB2
  %tmp_971 = extractelement <4 x float> %tmp_970, i32 0
  %tmp_972 = fmul float %tmp_969, %tmp_971
  %tmp_973 = fadd float %tmp_967, %tmp_972
  %tmp_974 = load <4 x float>* %tempA0
  %tmp_975 = extractelement <4 x float> %tmp_974, i32 3
  %tmp_976 = load <4 x float>* %tempB3
  %tmp_977 = extractelement <4 x float> %tmp_976, i32 0
  %tmp_978 = fmul float %tmp_975, %tmp_977
  %tmp_979 = fadd float %tmp_973, %tmp_978
  %tmp_980 = load <4 x float>* %sum0
  %tmp_983 = load <4 x float>* %tmp_982
  %tmp_985 = insertelement <4 x float> %tmp_983, float %tmp_979, i32 0
  %tmp_987 = insertelement <4 x float> %tmp_985, float %tmp_979, i32 1
  %tmp_989 = insertelement <4 x float> %tmp_987, float %tmp_979, i32 2
  %tmp_991 = insertelement <4 x float> %tmp_989, float %tmp_979, i32 3
  %tmp_992 = fadd <4 x float> %tmp_980, %tmp_991
  store <4 x float> %tmp_992, <4 x float>* %sum0
  %tmp_994 = load <4 x float>* %tempA0
  %tmp_995 = extractelement <4 x float> %tmp_994, i32 0
  %tmp_996 = load <4 x float>* %tempB0
  %tmp_997 = extractelement <4 x float> %tmp_996, i32 1
  %tmp_998 = fmul float %tmp_995, %tmp_997
  %tmp_999 = load <4 x float>* %tempA0
  %tmp_1000 = extractelement <4 x float> %tmp_999, i32 1
  %tmp_1001 = load <4 x float>* %tempB1
  %tmp_1002 = extractelement <4 x float> %tmp_1001, i32 1
  %tmp_1003 = fmul float %tmp_1000, %tmp_1002
  %tmp_1004 = fadd float %tmp_998, %tmp_1003
  %tmp_1005 = load <4 x float>* %tempA0
  %tmp_1006 = extractelement <4 x float> %tmp_1005, i32 2
  %tmp_1007 = load <4 x float>* %tempB2
  %tmp_1008 = extractelement <4 x float> %tmp_1007, i32 1
  %tmp_1009 = fmul float %tmp_1006, %tmp_1008
  %tmp_1010 = fadd float %tmp_1004, %tmp_1009
  %tmp_1011 = load <4 x float>* %tempA0
  %tmp_1012 = extractelement <4 x float> %tmp_1011, i32 3
  %tmp_1013 = load <4 x float>* %tempB3
  %tmp_1014 = extractelement <4 x float> %tmp_1013, i32 1
  %tmp_1015 = fmul float %tmp_1012, %tmp_1014
  %tmp_1016 = fadd float %tmp_1010, %tmp_1015
  %tmp_1017 = load <4 x float>* %sum0
  %tmp_1020 = load <4 x float>* %tmp_1019
  %tmp_1022 = insertelement <4 x float> %tmp_1020, float %tmp_1016, i32 0
  %tmp_1024 = insertelement <4 x float> %tmp_1022, float %tmp_1016, i32 1
  %tmp_1026 = insertelement <4 x float> %tmp_1024, float %tmp_1016, i32 2
  %tmp_1028 = insertelement <4 x float> %tmp_1026, float %tmp_1016, i32 3
  %tmp_1029 = fadd <4 x float> %tmp_1017, %tmp_1028
  store <4 x float> %tmp_1029, <4 x float>* %sum0
  %tmp_1031 = load <4 x float>* %tempA0
  %tmp_1032 = extractelement <4 x float> %tmp_1031, i32 0
  %tmp_1033 = load <4 x float>* %tempB0
  %tmp_1034 = extractelement <4 x float> %tmp_1033, i32 2
  %tmp_1035 = fmul float %tmp_1032, %tmp_1034
  %tmp_1036 = load <4 x float>* %tempA0
  %tmp_1037 = extractelement <4 x float> %tmp_1036, i32 1
  %tmp_1038 = load <4 x float>* %tempB1
  %tmp_1039 = extractelement <4 x float> %tmp_1038, i32 2
  %tmp_1040 = fmul float %tmp_1037, %tmp_1039
  %tmp_1041 = fadd float %tmp_1035, %tmp_1040
  %tmp_1042 = load <4 x float>* %tempA0
  %tmp_1043 = extractelement <4 x float> %tmp_1042, i32 2
  %tmp_1044 = load <4 x float>* %tempB2
  %tmp_1045 = extractelement <4 x float> %tmp_1044, i32 2
  %tmp_1046 = fmul float %tmp_1043, %tmp_1045
  %tmp_1047 = fadd float %tmp_1041, %tmp_1046
  %tmp_1048 = load <4 x float>* %tempA0
  %tmp_1049 = extractelement <4 x float> %tmp_1048, i32 3
  %tmp_1050 = load <4 x float>* %tempB3
  %tmp_1051 = extractelement <4 x float> %tmp_1050, i32 2
  %tmp_1052 = fmul float %tmp_1049, %tmp_1051
  %tmp_1053 = fadd float %tmp_1047, %tmp_1052
  %tmp_1054 = load <4 x float>* %sum0
  %tmp_1057 = load <4 x float>* %tmp_1056
  %tmp_1059 = insertelement <4 x float> %tmp_1057, float %tmp_1053, i32 0
  %tmp_1061 = insertelement <4 x float> %tmp_1059, float %tmp_1053, i32 1
  %tmp_1063 = insertelement <4 x float> %tmp_1061, float %tmp_1053, i32 2
  %tmp_1065 = insertelement <4 x float> %tmp_1063, float %tmp_1053, i32 3
  %tmp_1066 = fadd <4 x float> %tmp_1054, %tmp_1065
  store <4 x float> %tmp_1066, <4 x float>* %sum0
  %tmp_1068 = load <4 x float>* %tempA0
  %tmp_1069 = extractelement <4 x float> %tmp_1068, i32 0
  %tmp_1070 = load <4 x float>* %tempB0
  %tmp_1071 = extractelement <4 x float> %tmp_1070, i32 3
  %tmp_1072 = fmul float %tmp_1069, %tmp_1071
  %tmp_1073 = load <4 x float>* %tempA0
  %tmp_1074 = extractelement <4 x float> %tmp_1073, i32 1
  %tmp_1075 = load <4 x float>* %tempB1
  %tmp_1076 = extractelement <4 x float> %tmp_1075, i32 3
  %tmp_1077 = fmul float %tmp_1074, %tmp_1076
  %tmp_1078 = fadd float %tmp_1072, %tmp_1077
  %tmp_1079 = load <4 x float>* %tempA0
  %tmp_1080 = extractelement <4 x float> %tmp_1079, i32 2
  %tmp_1081 = load <4 x float>* %tempB2
  %tmp_1082 = extractelement <4 x float> %tmp_1081, i32 3
  %tmp_1083 = fmul float %tmp_1080, %tmp_1082
  %tmp_1084 = fadd float %tmp_1078, %tmp_1083
  %tmp_1085 = load <4 x float>* %tempA0
  %tmp_1086 = extractelement <4 x float> %tmp_1085, i32 3
  %tmp_1087 = load <4 x float>* %tempB3
  %tmp_1088 = extractelement <4 x float> %tmp_1087, i32 3
  %tmp_1089 = fmul float %tmp_1086, %tmp_1088
  %tmp_1090 = fadd float %tmp_1084, %tmp_1089
  %tmp_1091 = load <4 x float>* %sum0
  %tmp_1094 = load <4 x float>* %tmp_1093
  %tmp_1096 = insertelement <4 x float> %tmp_1094, float %tmp_1090, i32 0
  %tmp_1098 = insertelement <4 x float> %tmp_1096, float %tmp_1090, i32 1
  %tmp_1100 = insertelement <4 x float> %tmp_1098, float %tmp_1090, i32 2
  %tmp_1102 = insertelement <4 x float> %tmp_1100, float %tmp_1090, i32 3
  %tmp_1103 = fadd <4 x float> %tmp_1091, %tmp_1102
  store <4 x float> %tmp_1103, <4 x float>* %sum0
  %tmp_1105 = load <4 x float>* %tempA1
  %tmp_1106 = extractelement <4 x float> %tmp_1105, i32 0
  %tmp_1107 = load <4 x float>* %tempB0
  %tmp_1108 = extractelement <4 x float> %tmp_1107, i32 0
  %tmp_1109 = fmul float %tmp_1106, %tmp_1108
  %tmp_1110 = load <4 x float>* %tempA1
  %tmp_1111 = extractelement <4 x float> %tmp_1110, i32 1
  %tmp_1112 = load <4 x float>* %tempB1
  %tmp_1113 = extractelement <4 x float> %tmp_1112, i32 0
  %tmp_1114 = fmul float %tmp_1111, %tmp_1113
  %tmp_1115 = fadd float %tmp_1109, %tmp_1114
  %tmp_1116 = load <4 x float>* %tempA1
  %tmp_1117 = extractelement <4 x float> %tmp_1116, i32 2
  %tmp_1118 = load <4 x float>* %tempB2
  %tmp_1119 = extractelement <4 x float> %tmp_1118, i32 0
  %tmp_1120 = fmul float %tmp_1117, %tmp_1119
  %tmp_1121 = fadd float %tmp_1115, %tmp_1120
  %tmp_1122 = load <4 x float>* %tempA1
  %tmp_1123 = extractelement <4 x float> %tmp_1122, i32 3
  %tmp_1124 = load <4 x float>* %tempB3
  %tmp_1125 = extractelement <4 x float> %tmp_1124, i32 0
  %tmp_1126 = fmul float %tmp_1123, %tmp_1125
  %tmp_1127 = fadd float %tmp_1121, %tmp_1126
  %tmp_1128 = load <4 x float>* %sum1
  %tmp_1131 = load <4 x float>* %tmp_1130
  %tmp_1133 = insertelement <4 x float> %tmp_1131, float %tmp_1127, i32 0
  %tmp_1135 = insertelement <4 x float> %tmp_1133, float %tmp_1127, i32 1
  %tmp_1137 = insertelement <4 x float> %tmp_1135, float %tmp_1127, i32 2
  %tmp_1139 = insertelement <4 x float> %tmp_1137, float %tmp_1127, i32 3
  %tmp_1140 = fadd <4 x float> %tmp_1128, %tmp_1139
  store <4 x float> %tmp_1140, <4 x float>* %sum1
  %tmp_1142 = load <4 x float>* %tempA1
  %tmp_1143 = extractelement <4 x float> %tmp_1142, i32 0
  %tmp_1144 = load <4 x float>* %tempB0
  %tmp_1145 = extractelement <4 x float> %tmp_1144, i32 1
  %tmp_1146 = fmul float %tmp_1143, %tmp_1145
  %tmp_1147 = load <4 x float>* %tempA1
  %tmp_1148 = extractelement <4 x float> %tmp_1147, i32 1
  %tmp_1149 = load <4 x float>* %tempB1
  %tmp_1150 = extractelement <4 x float> %tmp_1149, i32 1
  %tmp_1151 = fmul float %tmp_1148, %tmp_1150
  %tmp_1152 = fadd float %tmp_1146, %tmp_1151
  %tmp_1153 = load <4 x float>* %tempA1
  %tmp_1154 = extractelement <4 x float> %tmp_1153, i32 2
  %tmp_1155 = load <4 x float>* %tempB2
  %tmp_1156 = extractelement <4 x float> %tmp_1155, i32 1
  %tmp_1157 = fmul float %tmp_1154, %tmp_1156
  %tmp_1158 = fadd float %tmp_1152, %tmp_1157
  %tmp_1159 = load <4 x float>* %tempA1
  %tmp_1160 = extractelement <4 x float> %tmp_1159, i32 3
  %tmp_1161 = load <4 x float>* %tempB3
  %tmp_1162 = extractelement <4 x float> %tmp_1161, i32 1
  %tmp_1163 = fmul float %tmp_1160, %tmp_1162
  %tmp_1164 = fadd float %tmp_1158, %tmp_1163
  %tmp_1165 = load <4 x float>* %sum1
  %tmp_1168 = load <4 x float>* %tmp_1167
  %tmp_1170 = insertelement <4 x float> %tmp_1168, float %tmp_1164, i32 0
  %tmp_1172 = insertelement <4 x float> %tmp_1170, float %tmp_1164, i32 1
  %tmp_1174 = insertelement <4 x float> %tmp_1172, float %tmp_1164, i32 2
  %tmp_1176 = insertelement <4 x float> %tmp_1174, float %tmp_1164, i32 3
  %tmp_1177 = fadd <4 x float> %tmp_1165, %tmp_1176
  store <4 x float> %tmp_1177, <4 x float>* %sum1
  %tmp_1179 = load <4 x float>* %tempA1
  %tmp_1180 = extractelement <4 x float> %tmp_1179, i32 0
  %tmp_1181 = load <4 x float>* %tempB0
  %tmp_1182 = extractelement <4 x float> %tmp_1181, i32 2
  %tmp_1183 = fmul float %tmp_1180, %tmp_1182
  %tmp_1184 = load <4 x float>* %tempA1
  %tmp_1185 = extractelement <4 x float> %tmp_1184, i32 1
  %tmp_1186 = load <4 x float>* %tempB1
  %tmp_1187 = extractelement <4 x float> %tmp_1186, i32 2
  %tmp_1188 = fmul float %tmp_1185, %tmp_1187
  %tmp_1189 = fadd float %tmp_1183, %tmp_1188
  %tmp_1190 = load <4 x float>* %tempA1
  %tmp_1191 = extractelement <4 x float> %tmp_1190, i32 2
  %tmp_1192 = load <4 x float>* %tempB2
  %tmp_1193 = extractelement <4 x float> %tmp_1192, i32 2
  %tmp_1194 = fmul float %tmp_1191, %tmp_1193
  %tmp_1195 = fadd float %tmp_1189, %tmp_1194
  %tmp_1196 = load <4 x float>* %tempA1
  %tmp_1197 = extractelement <4 x float> %tmp_1196, i32 3
  %tmp_1198 = load <4 x float>* %tempB3
  %tmp_1199 = extractelement <4 x float> %tmp_1198, i32 2
  %tmp_1200 = fmul float %tmp_1197, %tmp_1199
  %tmp_1201 = fadd float %tmp_1195, %tmp_1200
  %tmp_1202 = load <4 x float>* %sum1
  %tmp_1205 = load <4 x float>* %tmp_1204
  %tmp_1207 = insertelement <4 x float> %tmp_1205, float %tmp_1201, i32 0
  %tmp_1209 = insertelement <4 x float> %tmp_1207, float %tmp_1201, i32 1
  %tmp_1211 = insertelement <4 x float> %tmp_1209, float %tmp_1201, i32 2
  %tmp_1213 = insertelement <4 x float> %tmp_1211, float %tmp_1201, i32 3
  %tmp_1214 = fadd <4 x float> %tmp_1202, %tmp_1213
  store <4 x float> %tmp_1214, <4 x float>* %sum1
  %tmp_1216 = load <4 x float>* %tempA1
  %tmp_1217 = extractelement <4 x float> %tmp_1216, i32 0
  %tmp_1218 = load <4 x float>* %tempB0
  %tmp_1219 = extractelement <4 x float> %tmp_1218, i32 3
  %tmp_1220 = fmul float %tmp_1217, %tmp_1219
  %tmp_1221 = load <4 x float>* %tempA1
  %tmp_1222 = extractelement <4 x float> %tmp_1221, i32 1
  %tmp_1223 = load <4 x float>* %tempB1
  %tmp_1224 = extractelement <4 x float> %tmp_1223, i32 3
  %tmp_1225 = fmul float %tmp_1222, %tmp_1224
  %tmp_1226 = fadd float %tmp_1220, %tmp_1225
  %tmp_1227 = load <4 x float>* %tempA1
  %tmp_1228 = extractelement <4 x float> %tmp_1227, i32 2
  %tmp_1229 = load <4 x float>* %tempB2
  %tmp_1230 = extractelement <4 x float> %tmp_1229, i32 3
  %tmp_1231 = fmul float %tmp_1228, %tmp_1230
  %tmp_1232 = fadd float %tmp_1226, %tmp_1231
  %tmp_1233 = load <4 x float>* %tempA1
  %tmp_1234 = extractelement <4 x float> %tmp_1233, i32 3
  %tmp_1235 = load <4 x float>* %tempB3
  %tmp_1236 = extractelement <4 x float> %tmp_1235, i32 3
  %tmp_1237 = fmul float %tmp_1234, %tmp_1236
  %tmp_1238 = fadd float %tmp_1232, %tmp_1237
  %tmp_1239 = load <4 x float>* %sum1
  %tmp_1242 = load <4 x float>* %tmp_1241
  %tmp_1244 = insertelement <4 x float> %tmp_1242, float %tmp_1238, i32 0
  %tmp_1246 = insertelement <4 x float> %tmp_1244, float %tmp_1238, i32 1
  %tmp_1248 = insertelement <4 x float> %tmp_1246, float %tmp_1238, i32 2
  %tmp_1250 = insertelement <4 x float> %tmp_1248, float %tmp_1238, i32 3
  %tmp_1251 = fadd <4 x float> %tmp_1239, %tmp_1250
  store <4 x float> %tmp_1251, <4 x float>* %sum1
  %tmp_1253 = load <4 x float>* %tempA2
  %tmp_1254 = extractelement <4 x float> %tmp_1253, i32 0
  %tmp_1255 = load <4 x float>* %tempB0
  %tmp_1256 = extractelement <4 x float> %tmp_1255, i32 0
  %tmp_1257 = fmul float %tmp_1254, %tmp_1256
  %tmp_1258 = load <4 x float>* %tempA2
  %tmp_1259 = extractelement <4 x float> %tmp_1258, i32 1
  %tmp_1260 = load <4 x float>* %tempB1
  %tmp_1261 = extractelement <4 x float> %tmp_1260, i32 0
  %tmp_1262 = fmul float %tmp_1259, %tmp_1261
  %tmp_1263 = fadd float %tmp_1257, %tmp_1262
  %tmp_1264 = load <4 x float>* %tempA2
  %tmp_1265 = extractelement <4 x float> %tmp_1264, i32 2
  %tmp_1266 = load <4 x float>* %tempB2
  %tmp_1267 = extractelement <4 x float> %tmp_1266, i32 0
  %tmp_1268 = fmul float %tmp_1265, %tmp_1267
  %tmp_1269 = fadd float %tmp_1263, %tmp_1268
  %tmp_1270 = load <4 x float>* %tempA2
  %tmp_1271 = extractelement <4 x float> %tmp_1270, i32 3
  %tmp_1272 = load <4 x float>* %tempB3
  %tmp_1273 = extractelement <4 x float> %tmp_1272, i32 0
  %tmp_1274 = fmul float %tmp_1271, %tmp_1273
  %tmp_1275 = fadd float %tmp_1269, %tmp_1274
  %tmp_1276 = load <4 x float>* %sum2
  %tmp_1279 = load <4 x float>* %tmp_1278
  %tmp_1281 = insertelement <4 x float> %tmp_1279, float %tmp_1275, i32 0
  %tmp_1283 = insertelement <4 x float> %tmp_1281, float %tmp_1275, i32 1
  %tmp_1285 = insertelement <4 x float> %tmp_1283, float %tmp_1275, i32 2
  %tmp_1287 = insertelement <4 x float> %tmp_1285, float %tmp_1275, i32 3
  %tmp_1288 = fadd <4 x float> %tmp_1276, %tmp_1287
  store <4 x float> %tmp_1288, <4 x float>* %sum2
  %tmp_1290 = load <4 x float>* %tempA2
  %tmp_1291 = extractelement <4 x float> %tmp_1290, i32 0
  %tmp_1292 = load <4 x float>* %tempB0
  %tmp_1293 = extractelement <4 x float> %tmp_1292, i32 1
  %tmp_1294 = fmul float %tmp_1291, %tmp_1293
  %tmp_1295 = load <4 x float>* %tempA2
  %tmp_1296 = extractelement <4 x float> %tmp_1295, i32 1
  %tmp_1297 = load <4 x float>* %tempB1
  %tmp_1298 = extractelement <4 x float> %tmp_1297, i32 1
  %tmp_1299 = fmul float %tmp_1296, %tmp_1298
  %tmp_1300 = fadd float %tmp_1294, %tmp_1299
  %tmp_1301 = load <4 x float>* %tempA2
  %tmp_1302 = extractelement <4 x float> %tmp_1301, i32 2
  %tmp_1303 = load <4 x float>* %tempB2
  %tmp_1304 = extractelement <4 x float> %tmp_1303, i32 1
  %tmp_1305 = fmul float %tmp_1302, %tmp_1304
  %tmp_1306 = fadd float %tmp_1300, %tmp_1305
  %tmp_1307 = load <4 x float>* %tempA2
  %tmp_1308 = extractelement <4 x float> %tmp_1307, i32 3
  %tmp_1309 = load <4 x float>* %tempB3
  %tmp_1310 = extractelement <4 x float> %tmp_1309, i32 1
  %tmp_1311 = fmul float %tmp_1308, %tmp_1310
  %tmp_1312 = fadd float %tmp_1306, %tmp_1311
  %tmp_1313 = load <4 x float>* %sum2
  %tmp_1316 = load <4 x float>* %tmp_1315
  %tmp_1318 = insertelement <4 x float> %tmp_1316, float %tmp_1312, i32 0
  %tmp_1320 = insertelement <4 x float> %tmp_1318, float %tmp_1312, i32 1
  %tmp_1322 = insertelement <4 x float> %tmp_1320, float %tmp_1312, i32 2
  %tmp_1324 = insertelement <4 x float> %tmp_1322, float %tmp_1312, i32 3
  %tmp_1325 = fadd <4 x float> %tmp_1313, %tmp_1324
  store <4 x float> %tmp_1325, <4 x float>* %sum2
  %tmp_1327 = load <4 x float>* %tempA2
  %tmp_1328 = extractelement <4 x float> %tmp_1327, i32 0
  %tmp_1329 = load <4 x float>* %tempB0
  %tmp_1330 = extractelement <4 x float> %tmp_1329, i32 2
  %tmp_1331 = fmul float %tmp_1328, %tmp_1330
  %tmp_1332 = load <4 x float>* %tempA2
  %tmp_1333 = extractelement <4 x float> %tmp_1332, i32 1
  %tmp_1334 = load <4 x float>* %tempB1
  %tmp_1335 = extractelement <4 x float> %tmp_1334, i32 2
  %tmp_1336 = fmul float %tmp_1333, %tmp_1335
  %tmp_1337 = fadd float %tmp_1331, %tmp_1336
  %tmp_1338 = load <4 x float>* %tempA2
  %tmp_1339 = extractelement <4 x float> %tmp_1338, i32 2
  %tmp_1340 = load <4 x float>* %tempB2
  %tmp_1341 = extractelement <4 x float> %tmp_1340, i32 2
  %tmp_1342 = fmul float %tmp_1339, %tmp_1341
  %tmp_1343 = fadd float %tmp_1337, %tmp_1342
  %tmp_1344 = load <4 x float>* %tempA2
  %tmp_1345 = extractelement <4 x float> %tmp_1344, i32 3
  %tmp_1346 = load <4 x float>* %tempB3
  %tmp_1347 = extractelement <4 x float> %tmp_1346, i32 2
  %tmp_1348 = fmul float %tmp_1345, %tmp_1347
  %tmp_1349 = fadd float %tmp_1343, %tmp_1348
  %tmp_1350 = load <4 x float>* %sum2
  %tmp_1353 = load <4 x float>* %tmp_1352
  %tmp_1355 = insertelement <4 x float> %tmp_1353, float %tmp_1349, i32 0
  %tmp_1357 = insertelement <4 x float> %tmp_1355, float %tmp_1349, i32 1
  %tmp_1359 = insertelement <4 x float> %tmp_1357, float %tmp_1349, i32 2
  %tmp_1361 = insertelement <4 x float> %tmp_1359, float %tmp_1349, i32 3
  %tmp_1362 = fadd <4 x float> %tmp_1350, %tmp_1361
  store <4 x float> %tmp_1362, <4 x float>* %sum2
  %tmp_1364 = load <4 x float>* %tempA2
  %tmp_1365 = extractelement <4 x float> %tmp_1364, i32 0
  %tmp_1366 = load <4 x float>* %tempB0
  %tmp_1367 = extractelement <4 x float> %tmp_1366, i32 3
  %tmp_1368 = fmul float %tmp_1365, %tmp_1367
  %tmp_1369 = load <4 x float>* %tempA2
  %tmp_1370 = extractelement <4 x float> %tmp_1369, i32 1
  %tmp_1371 = load <4 x float>* %tempB1
  %tmp_1372 = extractelement <4 x float> %tmp_1371, i32 3
  %tmp_1373 = fmul float %tmp_1370, %tmp_1372
  %tmp_1374 = fadd float %tmp_1368, %tmp_1373
  %tmp_1375 = load <4 x float>* %tempA2
  %tmp_1376 = extractelement <4 x float> %tmp_1375, i32 2
  %tmp_1377 = load <4 x float>* %tempB2
  %tmp_1378 = extractelement <4 x float> %tmp_1377, i32 3
  %tmp_1379 = fmul float %tmp_1376, %tmp_1378
  %tmp_1380 = fadd float %tmp_1374, %tmp_1379
  %tmp_1381 = load <4 x float>* %tempA2
  %tmp_1382 = extractelement <4 x float> %tmp_1381, i32 3
  %tmp_1383 = load <4 x float>* %tempB3
  %tmp_1384 = extractelement <4 x float> %tmp_1383, i32 3
  %tmp_1385 = fmul float %tmp_1382, %tmp_1384
  %tmp_1386 = fadd float %tmp_1380, %tmp_1385
  %tmp_1387 = load <4 x float>* %sum2
  %tmp_1390 = load <4 x float>* %tmp_1389
  %tmp_1392 = insertelement <4 x float> %tmp_1390, float %tmp_1386, i32 0
  %tmp_1394 = insertelement <4 x float> %tmp_1392, float %tmp_1386, i32 1
  %tmp_1396 = insertelement <4 x float> %tmp_1394, float %tmp_1386, i32 2
  %tmp_1398 = insertelement <4 x float> %tmp_1396, float %tmp_1386, i32 3
  %tmp_1399 = fadd <4 x float> %tmp_1387, %tmp_1398
  store <4 x float> %tmp_1399, <4 x float>* %sum2
  %tmp_1401 = load <4 x float>* %tempA3
  %tmp_1402 = extractelement <4 x float> %tmp_1401, i32 0
  %tmp_1403 = load <4 x float>* %tempB0
  %tmp_1404 = extractelement <4 x float> %tmp_1403, i32 0
  %tmp_1405 = fmul float %tmp_1402, %tmp_1404
  %tmp_1406 = load <4 x float>* %tempA3
  %tmp_1407 = extractelement <4 x float> %tmp_1406, i32 1
  %tmp_1408 = load <4 x float>* %tempB1
  %tmp_1409 = extractelement <4 x float> %tmp_1408, i32 0
  %tmp_1410 = fmul float %tmp_1407, %tmp_1409
  %tmp_1411 = fadd float %tmp_1405, %tmp_1410
  %tmp_1412 = load <4 x float>* %tempA3
  %tmp_1413 = extractelement <4 x float> %tmp_1412, i32 2
  %tmp_1414 = load <4 x float>* %tempB2
  %tmp_1415 = extractelement <4 x float> %tmp_1414, i32 0
  %tmp_1416 = fmul float %tmp_1413, %tmp_1415
  %tmp_1417 = fadd float %tmp_1411, %tmp_1416
  %tmp_1418 = load <4 x float>* %tempA3
  %tmp_1419 = extractelement <4 x float> %tmp_1418, i32 3
  %tmp_1420 = load <4 x float>* %tempB3
  %tmp_1421 = extractelement <4 x float> %tmp_1420, i32 0
  %tmp_1422 = fmul float %tmp_1419, %tmp_1421
  %tmp_1423 = fadd float %tmp_1417, %tmp_1422
  %tmp_1424 = load <4 x float>* %sum3
  %tmp_1427 = load <4 x float>* %tmp_1426
  %tmp_1429 = insertelement <4 x float> %tmp_1427, float %tmp_1423, i32 0
  %tmp_1431 = insertelement <4 x float> %tmp_1429, float %tmp_1423, i32 1
  %tmp_1433 = insertelement <4 x float> %tmp_1431, float %tmp_1423, i32 2
  %tmp_1435 = insertelement <4 x float> %tmp_1433, float %tmp_1423, i32 3
  %tmp_1436 = fadd <4 x float> %tmp_1424, %tmp_1435
  store <4 x float> %tmp_1436, <4 x float>* %sum3
  %tmp_1438 = load <4 x float>* %tempA3
  %tmp_1439 = extractelement <4 x float> %tmp_1438, i32 0
  %tmp_1440 = load <4 x float>* %tempB0
  %tmp_1441 = extractelement <4 x float> %tmp_1440, i32 1
  %tmp_1442 = fmul float %tmp_1439, %tmp_1441
  %tmp_1443 = load <4 x float>* %tempA3
  %tmp_1444 = extractelement <4 x float> %tmp_1443, i32 1
  %tmp_1445 = load <4 x float>* %tempB1
  %tmp_1446 = extractelement <4 x float> %tmp_1445, i32 1
  %tmp_1447 = fmul float %tmp_1444, %tmp_1446
  %tmp_1448 = fadd float %tmp_1442, %tmp_1447
  %tmp_1449 = load <4 x float>* %tempA3
  %tmp_1450 = extractelement <4 x float> %tmp_1449, i32 2
  %tmp_1451 = load <4 x float>* %tempB2
  %tmp_1452 = extractelement <4 x float> %tmp_1451, i32 1
  %tmp_1453 = fmul float %tmp_1450, %tmp_1452
  %tmp_1454 = fadd float %tmp_1448, %tmp_1453
  %tmp_1455 = load <4 x float>* %tempA3
  %tmp_1456 = extractelement <4 x float> %tmp_1455, i32 3
  %tmp_1457 = load <4 x float>* %tempB3
  %tmp_1458 = extractelement <4 x float> %tmp_1457, i32 1
  %tmp_1459 = fmul float %tmp_1456, %tmp_1458
  %tmp_1460 = fadd float %tmp_1454, %tmp_1459
  %tmp_1461 = load <4 x float>* %sum3
  %tmp_1464 = load <4 x float>* %tmp_1463
  %tmp_1466 = insertelement <4 x float> %tmp_1464, float %tmp_1460, i32 0
  %tmp_1468 = insertelement <4 x float> %tmp_1466, float %tmp_1460, i32 1
  %tmp_1470 = insertelement <4 x float> %tmp_1468, float %tmp_1460, i32 2
  %tmp_1472 = insertelement <4 x float> %tmp_1470, float %tmp_1460, i32 3
  %tmp_1473 = fadd <4 x float> %tmp_1461, %tmp_1472
  store <4 x float> %tmp_1473, <4 x float>* %sum3
  %tmp_1475 = load <4 x float>* %tempA3
  %tmp_1476 = extractelement <4 x float> %tmp_1475, i32 0
  %tmp_1477 = load <4 x float>* %tempB0
  %tmp_1478 = extractelement <4 x float> %tmp_1477, i32 2
  %tmp_1479 = fmul float %tmp_1476, %tmp_1478
  %tmp_1480 = load <4 x float>* %tempA3
  %tmp_1481 = extractelement <4 x float> %tmp_1480, i32 1
  %tmp_1482 = load <4 x float>* %tempB1
  %tmp_1483 = extractelement <4 x float> %tmp_1482, i32 2
  %tmp_1484 = fmul float %tmp_1481, %tmp_1483
  %tmp_1485 = fadd float %tmp_1479, %tmp_1484
  %tmp_1486 = load <4 x float>* %tempA3
  %tmp_1487 = extractelement <4 x float> %tmp_1486, i32 2
  %tmp_1488 = load <4 x float>* %tempB2
  %tmp_1489 = extractelement <4 x float> %tmp_1488, i32 2
  %tmp_1490 = fmul float %tmp_1487, %tmp_1489
  %tmp_1491 = fadd float %tmp_1485, %tmp_1490
  %tmp_1492 = load <4 x float>* %tempA3
  %tmp_1493 = extractelement <4 x float> %tmp_1492, i32 3
  %tmp_1494 = load <4 x float>* %tempB3
  %tmp_1495 = extractelement <4 x float> %tmp_1494, i32 2
  %tmp_1496 = fmul float %tmp_1493, %tmp_1495
  %tmp_1497 = fadd float %tmp_1491, %tmp_1496
  %tmp_1498 = load <4 x float>* %sum3
  %tmp_1501 = load <4 x float>* %tmp_1500
  %tmp_1503 = insertelement <4 x float> %tmp_1501, float %tmp_1497, i32 0
  %tmp_1505 = insertelement <4 x float> %tmp_1503, float %tmp_1497, i32 1
  %tmp_1507 = insertelement <4 x float> %tmp_1505, float %tmp_1497, i32 2
  %tmp_1509 = insertelement <4 x float> %tmp_1507, float %tmp_1497, i32 3
  %tmp_1510 = fadd <4 x float> %tmp_1498, %tmp_1509
  store <4 x float> %tmp_1510, <4 x float>* %sum3
  %tmp_1512 = load <4 x float>* %tempA3
  %tmp_1513 = extractelement <4 x float> %tmp_1512, i32 0
  %tmp_1514 = load <4 x float>* %tempB0
  %tmp_1515 = extractelement <4 x float> %tmp_1514, i32 3
  %tmp_1516 = fmul float %tmp_1513, %tmp_1515
  %tmp_1517 = load <4 x float>* %tempA3
  %tmp_1518 = extractelement <4 x float> %tmp_1517, i32 1
  %tmp_1519 = load <4 x float>* %tempB1
  %tmp_1520 = extractelement <4 x float> %tmp_1519, i32 3
  %tmp_1521 = fmul float %tmp_1518, %tmp_1520
  %tmp_1522 = fadd float %tmp_1516, %tmp_1521
  %tmp_1523 = load <4 x float>* %tempA3
  %tmp_1524 = extractelement <4 x float> %tmp_1523, i32 2
  %tmp_1525 = load <4 x float>* %tempB2
  %tmp_1526 = extractelement <4 x float> %tmp_1525, i32 3
  %tmp_1527 = fmul float %tmp_1524, %tmp_1526
  %tmp_1528 = fadd float %tmp_1522, %tmp_1527
  %tmp_1529 = load <4 x float>* %tempA3
  %tmp_1530 = extractelement <4 x float> %tmp_1529, i32 3
  %tmp_1531 = load <4 x float>* %tempB3
  %tmp_1532 = extractelement <4 x float> %tmp_1531, i32 3
  %tmp_1533 = fmul float %tmp_1530, %tmp_1532
  %tmp_1534 = fadd float %tmp_1528, %tmp_1533
  %tmp_1535 = load <4 x float>* %sum3
  %tmp_1538 = load <4 x float>* %tmp_1537
  %tmp_1540 = insertelement <4 x float> %tmp_1538, float %tmp_1534, i32 0
  %tmp_1542 = insertelement <4 x float> %tmp_1540, float %tmp_1534, i32 1
  %tmp_1544 = insertelement <4 x float> %tmp_1542, float %tmp_1534, i32 2
  %tmp_1546 = insertelement <4 x float> %tmp_1544, float %tmp_1534, i32 3
  %tmp_1547 = fadd <4 x float> %tmp_1535, %tmp_1546
  store <4 x float> %tmp_1547, <4 x float>* %sum3
  br label %block_14

block_14:                                         ; preds = %block_13
  %tmp_877 = load i32* %j
  %tmp_878 = add i32 %tmp_877, 4
  store i32 %tmp_878, i32* %j
  br label %block_12

block_15:                                         ; preds = %block_12
  call void @__barrier_u32(i32 1)
  br label %block_10
}

; Function Attrs: nounwind
declare i32 @__get_local_id_u32(i32) #0

; Function Attrs: nounwind
declare i32 @__get_local_size_u32(i32) #0

; Function Attrs: nounwind
declare i32 @__get_global_size_u32(i32) #0

; Function Attrs: nounwind
declare void @__barrier_u32(i32) #0

attributes #0 = { nounwind }
